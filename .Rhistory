# panel.spacing.x=unit(0.5, "lines"),
panel.spacing.y=unit(0, "lines")
) +
geom_vline(xintercept=0, color = "white")+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
ggsave("output/theta_plot.png", width = 7, height = 4, bg = "transparent")
# plot theta ========
## PP =========
theta_df <- as.data.frame(bh_fit, pars = c(#"theta1[1]",
"theta_1_1_pp","theta_1_2_pp","theta_1_3_pp",
"theta_2_1_pp","theta_2_2_pp", "theta_2_3_pp","theta_2_4_pp")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:7, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta_1_1_pp" ~ "NBS July/August Temperature",
rowname== "theta_1_2_pp" ~ "Large Zooplankton Index",
rowname=="theta_1_3_pp" ~ "Yukon River Mainstem Discharge", #  "Gelatinous Zooplankton Index",
rowname== "theta_2_1_pp" ~ "Aleutian Winter Temperature",
rowname=="theta_2_2_pp" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta_2_3_pp" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta_2_4_pp" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
# "Gelatinous Zooplankton Index",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c( "Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
"Gelatinous Zooplankton Index") ~ "Juvenile",
variable %in% c("Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = median(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.8)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.8)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5, color = "white") +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
# panel.border = element_rect(color = "white"), #element_blank(),
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
# panel.grid.minor = element_blank(),
# panel.grid.major = element_blank(),
# plot.title = element_text(color = "white"),
strip.text.x = element_blank(),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"),
# panel.spacing.x=unit(0.5, "lines"),
panel.spacing.y=unit(0, "lines")
) +
geom_vline(xintercept=0, color = "white")+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
ggsave("output/theta_plot.png", width = 7, height = 4, bg = "transparent")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 4, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA_forAFS.RDS")
## B ==============
fullness_hatchery_temp_cov_plot <- fullness_hatchery_temp_cov %>%
gather(3:6, key = "variable", value = "value") %>%
filter(!cal_year<2000, variable%in% c("SST_CDD_Aleut",
"Chum_hatchery",
"full_index")) %>%
dplyr::mutate(variable = case_when(variable == "SST_CDD_Aleut" ~ "Aleutian Winter Temperature",
variable == "Chum_hatchery" ~ "Chum Salmon Hatchery Release Abundance",
variable == "full_index" ~   "Fullness Index"))
cov_b_plot<-ggplot(data = fullness_hatchery_temp_cov_plot,
aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_hline(yintercept =0, linetype =2, color = "white") +
geom_line() +
geom_point() +
scale_color_manual(values= PNWColors::pnw_palette(name="Anemone",n=3,type="discrete")) +
facet_wrap(~variable, ncol =1) +
theme_classic() +
ylab("Mean Scaled Trend") +
xlab("Calendar Year") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
cov_b_plot
ggsave("output/significant_B_Covariates.png", width = 4, height = 3, bg = "transparent")
# plot theta ========
## PP =========
theta_df <- as.data.frame(bh_fit, pars = c(#"theta1[1]",
"theta_1_1_pp","theta_1_2_pp","theta_1_3_pp",
"theta_2_1_pp","theta_2_2_pp", "theta_2_3_pp","theta_2_4_pp")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:7, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta_1_1_pp" ~ "NBS July/August Temperature",
rowname== "theta_1_2_pp" ~ "Large Zooplankton Index",
rowname=="theta_1_3_pp" ~ "Yukon River Mainstem Discharge", #  "Gelatinous Zooplankton Index",
rowname== "theta_2_1_pp" ~ "Aleutian Winter Temperature",
rowname=="theta_2_2_pp" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta_2_3_pp" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta_2_4_pp" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
# "Gelatinous Zooplankton Index",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c( "Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
"Gelatinous Zooplankton Index") ~ "Juvenile",
variable %in% c("Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = median(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.8)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.8)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5, color = "white") +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
# panel.border = element_rect(color = "white"), #element_blank(),
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
# panel.grid.minor = element_blank(),
# panel.grid.major = element_blank(),
# plot.title = element_text(color = "white"),
strip.text.x = element_blank(),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"),
# panel.spacing.x=unit(0.5, "lines"),
panel.spacing.y=unit(0, "lines")
) +
geom_vline(xintercept=0, color = "white")+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
ggsave("output/theta_plot.png", width = 7, height = 4, bg = "transparent")
# Plot JUST covariates ==============
## A =========
sst_zoop_cov_plot <- sst_zoop_cov %>%
gather(3:6, key = "variable", value = "value") %>%
filter(!cal_year<2000, variable%in% c("SST_CDD_NBS",
"Large_zoop"))
# Plot A-Gelatinous Zoops and Juvenile Abundance by brood year ==============
sst_zoop_cov <- read_csv("data/processed_covariates/stage_a_all.csv") %>%
dplyr::mutate(SST_CDD_NBS = as.numeric(scale(SST_CDD_NBS)),
yukon_mean_discharge = as.numeric(scale(yukon_mean_discharge))) %>%
# zoop are already mean scaled
dplyr::rename(cal_year = Year) %>%
dplyr::mutate(brood_year = cal_year-1) %>%
dplyr::select(cal_year,brood_year,SST_CDD_NBS, yukon_mean_discharge,Large_zoop,
Cnideria)
# Plot JUST covariates ==============
## A =========
sst_zoop_cov_plot <- sst_zoop_cov %>%
gather(3:6, key = "variable", value = "value") %>%
filter(!cal_year<2000, variable%in% c("SST_CDD_NBS",
"Large_zoop"))
ggplot(data = sst_zoop_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
# facet_wrap(~variable, ncol =1) +
theme_classic() +
geom_hline(yintercept =0, linetype =2)
## A Zoop backup =========
sst_cov_plot <- sst_zoop_cov %>%
gather(3:6, key = "variable", value = "value") %>%
filter(!cal_year<2000, variable%in% c("SST_CDD_NBS"))
ggplot(data = sst_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
# facet_wrap(~variable, ncol =1) +
theme_classic() +
geom_hline(yintercept =0, linetype =2) +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
# Plot JUST covariates ==============
## A SST =========
sst_cov_plot <- sst_zoop_cov %>%
gather(3:6, key = "variable", value = "value") %>%
filter(!cal_year<2000, variable%in% c("SST_CDD_NBS" ))
ggplot(data = sst_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
scale_color_manual(values= PNWColors::pnw_palette(name="Shuksan2",n=1,type="discrete")) +
# facet_wrap(~variable, ncol =1) +
theme_classic() +
geom_hline(yintercept =0, linetype =2) +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
ggplot(data = sst_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
scale_color_manual(values= PNWColors::pnw_palette(name="Mushroom",n=1,type="discrete")) +
# facet_wrap(~variable, ncol =1) +
theme_classic() +
geom_hline(yintercept =0, linetype =2) +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
a_sst <- ggplot(data = sst_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
scale_color_manual(values= PNWColors::pnw_palette(name="Shuksan2",n=1,type="discrete")) +
# facet_wrap(~variable, ncol =1) +
theme_classic() +
geom_hline(yintercept =0, linetype =2) +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
a_sst <- ggplot(data = sst_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
scale_color_manual(values= PNWColors::pnw_palette(name="Shuksan2",n=1,type="discrete")) +
# facet_wrap(~variable, ncol =1) +
theme_classic() +
geom_hline(yintercept =0, linetype =2) +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
a_sst
ggsave("output/SST_plot.png", width = 4, height = 3, bg = "transparent")
a_sst <- ggplot(data = sst_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
scale_color_manual(values= PNWColors::pnw_palette(name="Shuksan2",n=1,type="discrete")) +
# facet_wrap(~variable, ncol =1) +
theme_classic() +
geom_hline(yintercept =0, linetype =2, color = "white") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
a_sst
ggsave("output/SST_plot.png", width = 4, height = 3, bg = "transparent")
a_sst
ggsave("output/SST_plot.png", width = 4, height = 2, bg = "transparent")
a_sst <- ggplot(data = sst_cov_plot,aes(x=cal_year, y = value, group = variable, color = variable)) +
geom_line() +
geom_point() +
scale_color_manual(values= PNWColors::pnw_palette(name="Shuksan2",n=1,type="discrete")) +
theme_classic() +
ylab("Mean Scaled Trend") +
xlab("Calendar Year") +
geom_hline(yintercept =0, linetype =2, color = "white") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",# element_blank(),# "top",
legend.text = element_text(color = "white"),
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_text(color = "white"),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"))
a_sst
ggsave("output/SST_plot.png", width = 4, height = 2, bg = "transparent")
# plot theta ========
## PP =========
theta_df <- as.data.frame(bh_fit, pars = c(#"theta1[1]",
"theta_1_1_pp","theta_1_2_pp","theta_1_3_pp",
"theta_2_1_pp","theta_2_2_pp", "theta_2_3_pp","theta_2_4_pp")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:7, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta_1_1_pp" ~ "NBS July/August Temperature",
rowname== "theta_1_2_pp" ~ "Large Zooplankton Index",
rowname=="theta_1_3_pp" ~ "Yukon River Mainstem Discharge", #  "Gelatinous Zooplankton Index",
rowname== "theta_2_1_pp" ~ "Aleutian Winter Temperature",
rowname=="theta_2_2_pp" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta_2_3_pp" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta_2_4_pp" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
# "Gelatinous Zooplankton Index",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c( "Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
"Gelatinous Zooplankton Index") ~ "Juvenile",
variable %in% c("Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = median(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.8)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.8)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5, color = "white") +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
# panel.border = element_rect(color = "white"), #element_blank(),
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
# panel.grid.minor = element_blank(),
# panel.grid.major = element_blank(),
# plot.title = element_text(color = "white"),
strip.text.x = element_blank(),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"),
# panel.spacing.x=unit(0.5, "lines"),
panel.spacing.y=unit(0, "lines")
) +
geom_vline(xintercept=0, color = "white")+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
View(theta_df)
productivity %>%
group_by(variable) %>%
dplyr::mutate(mean = as.numeric(scale(mean))) %>%
ggplot(aes(x=time, y = mean, group = variable ,color = variable)) +
geom_line( ) #+
