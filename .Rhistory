geom_errorbar(data = dat_year, aes(x=YEAR, ymin=mean-se, ymax = mean+se),color = "blue",
alpha = 0.5,width = 0.1) +
xlab("Year") +
ylab("Copepod Biomass") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.title = element_blank())
pdf("output/Zoop_index_Plot.pdf", width = 10, height = 5)
print(COPEPOD_INDEX_PLOT)
dev.off()
png("output/Zoop_index_Plot.png", width = 1000, height = 500)
print(COPEPOD_INDEX_PLOT)
dev.off()
## Plot year ================================
# pred_plot_YEAR<-
COPEPOD_INDEX_PLOT <- ggplot()+
geom_bar( data = pred_df_year,aes(x=YEAR, y = pred), stat = "identity")  +
geom_errorbar(data = pred_df_year, aes(x=YEAR, ymin=pred-se, ymax = pred+se),
alpha = 0.5, width = 0.1) +
geom_point(data = dat_year, aes(x=YEAR, y=mean), color = "blue",
alpha = 0.5) +
geom_errorbar(data = dat_year, aes(x=YEAR, ymin=mean-se, ymax = mean+se),color = "blue",
alpha = 0.5,width = 0.1) +
xlab("Year") +
ylab("Copepod Biomass") +
theme_ipsum() +
ggtitle("Copepod Biomass Index") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.title = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 20),
axis.title.y = element_text(hjust = 0.5, size = 20),
axis.text.x = element_text( size = 18),
axis.text.y = element_text( size = 18),
plot.title = element_text(size=20,hjust = 0.5),
plot.background = element_rect(colour = "black", fill=NA, size=1))
## Plot year ================================
# pred_plot_YEAR<-
COPEPOD_INDEX_PLOT <- ggplot()+
geom_bar( data = pred_df_year,aes(x=YEAR, y = pred), stat = "identity")  +
geom_errorbar(data = pred_df_year, aes(x=YEAR, ymin=pred-se, ymax = pred+se),
alpha = 0.5, width = 0.1) +
geom_point(data = dat_year, aes(x=YEAR, y=mean), color = "blue",
alpha = 0.5) +
geom_errorbar(data = dat_year, aes(x=YEAR, ymin=mean-se, ymax = mean+se),color = "blue",
alpha = 0.5,width = 0.1) +
xlab("Year") +
ylab("Copepod Biomass") +
theme_ipsum() +
ggtitle("Copepod Biomass Index") +
theme(legend.title = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 20, angle = 90, vjust = 0.5),
axis.title.y = element_text(hjust = 0.5, size = 20),
axis.text.x = element_text( size = 18),
axis.text.y = element_text( size = 18),
plot.title = element_text(size=20,hjust = 0.5),
plot.background = element_rect(colour = "black", fill=NA, size=1))
png("output/Zoop_index_Plot.png", width = 1000, height = 500)
print(COPEPOD_INDEX_PLOT)
dev.off()
## Plot year ================================
# pred_plot_YEAR<-
COPEPOD_INDEX_PLOT <- ggplot()+
geom_bar( data = pred_df_year,aes(x=YEAR, y = pred), stat = "identity")  +
geom_errorbar(data = pred_df_year, aes(x=YEAR, ymin=pred-se, ymax = pred+se),
alpha = 0.5, width = 0.1) +
geom_point(data = dat_year, aes(x=YEAR, y=mean), color = "blue",
alpha = 0.5) +
geom_errorbar(data = dat_year, aes(x=YEAR, ymin=mean-se, ymax = mean+se),color = "blue",
alpha = 0.5,width = 0.1) +
xlab("Year") +
ylab("Biomass") +
theme_ipsum() +
ggtitle("Copepod Biomass Index") +
theme(legend.title = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 20, vjust = 0.5),
axis.title.y = element_text(hjust = 0.5, size = 20),
axis.text.x = element_text( size = 18),
axis.text.y = element_text( size = 18),
plot.title = element_text(size=20,hjust = 0.5),
plot.background = element_rect(colour = "black", fill=NA, size=1))
COPEPOD_INDEX_PLOT
png("output/Zoop_index_Plot.png", width = 1000, height = 500)
print(COPEPOD_INDEX_PLOT)
dev.off()
png("output/Zoop_index_Plot.png", width = 1000, height = 500)
print(COPEPOD_INDEX_PLOT)
dev.off()
## Plot year ================================
# pred_plot_YEAR<-
COPEPOD_INDEX_PLOT <- ggplot()+
geom_bar( data = pred_df_year,aes(x=YEAR, y = pred), stat = "identity")  +
geom_errorbar(data = pred_df_year, aes(x=YEAR, ymin=pred-se, ymax = pred+se),
alpha = 0.5, width = 0.1) +
geom_point(data = dat_year, aes(x=YEAR, y=mean), color = "blue",
alpha = 0.5) +
geom_errorbar(data = dat_year, aes(x=YEAR, ymin=mean-se, ymax = mean+se),color = "blue",
alpha = 0.5,width = 0.1) +
xlab("Year") +
ylab("Biomass (mg C m-3)") +
theme_ipsum() +
ggtitle("Copepod Biomass Index") +
theme(legend.title = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 20, vjust = 0.5),
axis.title.y = element_text(hjust = 0.5, size = 20),
axis.text.x = element_text( size = 18),
axis.text.y = element_text( size = 18),
plot.title = element_text(size=20,hjust = 0.5),
plot.background = element_rect(colour = "black", fill=NA, size=1))
png("output/Zoop_index_Plot.png", width = 1000, height = 500)
print(COPEPOD_INDEX_PLOT)
dev.off()
## Plot year ================================
# pred_plot_YEAR<-
COPEPOD_INDEX_PLOT <- ggplot()+
geom_bar( data = pred_df_year,aes(x=YEAR, y = pred), stat = "identity")  +
geom_errorbar(data = pred_df_year, aes(x=YEAR, ymin=pred-se, ymax = pred+se),
alpha = 0.5, width = 0.1) +
geom_point(data = dat_year, aes(x=YEAR, y=mean), color = "blue",
alpha = 0.5) +
geom_errorbar(data = dat_year, aes(x=YEAR, ymin=mean-se, ymax = mean+se),color = "blue",
alpha = 0.5,width = 0.1) +
xlab("Year") +
ylab("Biomass (mg C m-3)") +
labs(y = expression(paste("Biomass (mg C ", m^-3, ")"))) +
theme_ipsum() +
ggtitle("Copepod Biomass Index") +
theme(legend.title = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 20, vjust = 0.5),
axis.title.y = element_text(hjust = 0.5, size = 20),
axis.text.x = element_text( size = 18),
axis.text.y = element_text( size = 18),
plot.title = element_text(size=20,hjust = 0.5),
plot.background = element_rect(colour = "black", fill=NA, size=1))
png("output/Zoop_index_Plot.png", width = 1000, height = 500)
print(COPEPOD_INDEX_PLOT)
dev.off()
upper <- c("Dawson (Village/City)","Yukon Crossing, Y.T., Canada (Village/City)","Bearfeed Creek","Big Salmon River",
"Blind Creek" )
middle <-c( "Anvik Bluff", "Anvik River","Fairbanks (Village/City)","Galena (Village/City)",
"Manley (Village/City)", "Nenana (Village/City)","Nulato (Village/City)","Rampart (Village/City)",
"Rampart Rapids", "Ruby (Village/City)", "Stevens Village (Village/City)","Tanana (Village/City)",
"Y4 (Subdistrict 4)", "Y5 (Subdistrict 5)","Y6 (Subdistrict 6)","Beaver (Village/City)","Chatanika (Village/City)",
"Chena River","Chulitna River","Clear (Village/City)", "Gisasa River", "Goodpaster River", "Henshaw Creek","Kaltag (Village/City)"
)
lower <-c("Alakanuk (Village/City)", "Big Eddy", "Emmonak (Village/City)","Flat Island","Grayling (Village/City)",
"Halfway Island","Kotlik (Village/City)", "Marshall (Village/City)","Mountain Village (Village/City)",
"Ohogamiut (Village/City)","Pilot Station (Village/City)", "St Marys (Village/City)","Y1 (Subdistrict 1)",
"Y2 (Subdistrict 2)","Y3 (Subdistrict 3)","Andreafsky River", "Andreafsky River (East Fork)", "Ingersoll Islands"
)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(MARSS)
library(bayesdfa)
#load explore and tidy ASL data to go into a DFA for alpha parameter
#ASL data is from open knowledge network, Oke et al 2020. Here: https://knb.ecoinformatics.org/view/doi:10.5063/F1707ZTM
asl_dat <-read.csv("data/ASL_summary_byFWSWage.csv")
# separate Chum into Fall and Summer based on upper and lower spawning locations.
# Fall = upper, summer = lower
fall_chum_yukon <- c( )
summer_chum_yukon <- c( )
chum_tidy <- asl_dat %>%
filter(Species == "chum",
!sampleYear < 1980,
ASLProjectType %in% c("commercial catch", "escapement"),
SASAP.Region %in% c("Yukon", "Kuskokwim"),
!Fresh.Water.Age == "NA") %>%
dplyr::mutate(stock_group = case_when(SASAP.Region == "Kuskokwim" ~ "chum_kuskokwim",
LocationID %in% upper ~ "fall_chum_yukon",
LocationID %in% middle ~ "fall_chum_yukon",
LocationID %in% lower ~ "summer_chum_yukon",
Lon > -141 ~ "fall_chum_yukon",
Lat <= 63 ~ "summer_chum_yukon",
Lat > 63 ~ "fall_chum_yukon",
TRUE ~ "NA")) %>%
filter(!stock_group == "NA") #%>% # 5 NA's, one from Utquaivik the rest are from general yukon district, all from 2009...
asl_chum <- chum_tidy %>%
group_by(stock_group, Salt.Water.Age,sampleYear) %>%
dplyr::summarise(mean = mean(mean)) %>%
filter(Salt.Water.Age %in% c(2,3,4,5,6,7))
asl_dat <-read.csv("data/ASL_summary_byFWSWage.csv")
asl_dat <-read.csv("data/ASL_summary_byFWSWage.csv")
# separate Chum into Fall and Summer based on upper and lower spawning locations.
# Fall = upper, summer = lower
fall_chum_yukon <- c( )
summer_chum_yukon <- c( )
chum_tidy <- asl_dat %>%
filter(Species == "chum",
!sampleYear < 1980,
ASLProjectType %in% c("commercial catch", "escapement"),
SASAP.Region %in% c("Yukon", "Kuskokwim"),
!Fresh.Water.Age == "NA") %>%
dplyr::mutate(stock_group = case_when(SASAP.Region == "Kuskokwim" ~ "chum_kuskokwim",
LocationID %in% upper ~ "fall_chum_yukon",
LocationID %in% middle ~ "fall_chum_yukon",
LocationID %in% lower ~ "summer_chum_yukon",
Lon > -141 ~ "fall_chum_yukon",
Lat <= 63 ~ "summer_chum_yukon",
Lat > 63 ~ "fall_chum_yukon",
TRUE ~ "NA")) %>%
filter(!stock_group == "NA") #%>% # 5 NA's, one from Utquaivik the rest are from general yukon district, all from 2009...
asl_chum <- chum_tidy %>%
group_by(stock_group, Salt.Water.Age,sampleYear) %>%
dplyr::summarise(mean = mean(mean)) %>%
filter(Salt.Water.Age %in% c(2,3,4,5,6,7))
View(asl_chum)
View(asl_dat)
chum_kusko <- asl_dat %>%
filter(Species == "chum",
!sampleYear < 1980,
#ASLProjectType %in% c("commercial catch", "escapement"),
SASAP.Region %in% c( "Kuskokwim"),
!Fresh.Water.Age == "NA")
View(chum_kusko)
View(chum_kusko)
chum_kusko <- asl_dat %>%
filter(Species == "chum",
!sampleYear < 1980,
#ASLProjectType %in% c("commercial catch", "escapement"),
SASAP.Region %in% c( "Kuskokwim"),
!Fresh.Water.Age == "NA") %>%
dplyr::select(sampleYear, LocationID, ASLProjectType, Fresh.Water.Age, Salt.Water.Age, mean, sd,n)
chum_kusko <- asl_dat %>%
filter(Species == "chum",
!sampleYear < 1980,
#ASLProjectType %in% c("commercial catch", "escapement"),
SASAP.Region %in% c( "Kuskokwim"),
!Fresh.Water.Age == "NA") %>%
dplyr::select(sampleYear, LocationID, ASLProjectType, Fresh.Water.Age, Salt.Water.Age, mean, sd,n) %>%
unite(c(4:5), "age", remove = FALSE)
chum_kusko <- asl_dat %>%
filter(Species == "chum",
!sampleYear < 1980,
#ASLProjectType %in% c("commercial catch", "escapement"),
SASAP.Region %in% c( "Kuskokwim"),
!Fresh.Water.Age == "NA") %>%
dplyr::select(sampleYear, LocationID, ASLProjectType, Fresh.Water.Age, Salt.Water.Age, mean, sd,n) %>%
unite(col = c(4:5), "age", sep = ".",remove = FALSE)
chum_kusko <- asl_dat %>%
filter(Species == "chum",
!sampleYear < 1980,
#ASLProjectType %in% c("commercial catch", "escapement"),
SASAP.Region %in% c( "Kuskokwim"),
!Fresh.Water.Age == "NA") %>%
dplyr::select(sampleYear, LocationID, ASLProjectType, Fresh.Water.Age, Salt.Water.Age, mean, sd,n) %>%
unite( "age", 4:5, sep = ".",remove = FALSE)
View(chum_kusko)
ggplot(data = chum_kusko) +
geom_point(aes(x=as.numeric(sampleYear), y = mean)) +
geom_errorbar(aes(x =sampleYear, ymin = sampleYear-mean, ymax=sampleYear+mean)) +
facet_grid(~age) +
theme_classic()
ggplot(data = chum_kusko) +
geom_point(aes(x=as.numeric(sampleYear), y = mean)) +
geom_errorbar(aes(x =sampleYear, ymin = sampleYear-mean, ymax=sampleYear+mean)) +
facet_grid(LocationID~Salt.Water.Age) +
theme_classic()
ggplot(data = chum_kusko) +
geom_point(aes(x=as.numeric(sampleYear), y = mean)) +
geom_errorbar(aes(x =sampleYear, ymin = mean-sd, ymax=mean+sd)) +
facet_grid(LocationID~Salt.Water.Age) +
theme_classic()
View(chum_kusko)
unique(chum_kusko$ASLProjectType)
ggplot(data = chum_kusko) +
geom_point(aes(x=as.numeric(sampleYear), y = mean)) +
geom_errorbar(aes(x =sampleYear, ymin = mean-sd, ymax=mean+sd)) +
facet_grid(LocationID~Salt.Water.Age, scales = "free_y") +
theme_classic()
View(chum_kusko)
ggplot(chum_kusko) +
geom_violin(aes(x=sampleYear)) +
facet_wrap(~Salt.Water.Age)
ggplot(chum_kusko) +
geom_violin(aes(x=sampleYear, y = mean)) +
facet_wrap(~Salt.Water.Age)
ggplot(chum_kusko) +
geom_violin(aes(x=sampleYear, y = mean, group = sampleYear)) +
facet_wrap(~Salt.Water.Age)
unique(chum_kusko$ASLProjectType)
unique(chum_kusko$LocationID)
library(rstan)
param_est<- readRDS("output/optim_output_par_data2021.RDS")
estimated_parameters<- readRDS("output/optim_output_par_data2021.RDS")
pred_N<-data.frame(Year = c(1988:(upper_year-1)),
pred_N_est= as.vector(c(estimated_parameters[2:35])))
View(pred_N)
# Juv Index Tidy ========================================================================
juv_index<- read.csv("data/Juv_Index_CC_aug2023.RDS")
# Juv Index Tidy ========================================================================
juv_index<- read.csv("data/Juv_Index_CC_aug2023/index2.csv")
View(juv_index)
# Juv Index Tidy ========================================================================
juv_index<- read.csv("data/Juv_Index_CC_aug2023/index2.csv")  %>%
dplyr::select(Time, Estimate, Std..Error.for.Estimate) %>%
dplyr::rename(year = "Time",
r = "Estimate",
se = "Std..Error.for.Estimate")
View(juv_index)
# Join everything ========================================================================
df<- left_join(estimated_parameters, juv_index)
# Join everything ========================================================================
df<- left_join(pred_N_Kusko, juv_index)
estimated_parameters <- readRDS("output/optim_output_par_data2021.RDS")
pred_N_Kusko<-data.frame(year = c(1988:(upper_year-1)),
ssb= as.vector(c(estimated_parameters[2:35])))
# Juv Index Tidy ========================================================================
juv_index<- read.csv("data/Juv_Index_CC_aug2023/index2.csv")  %>%
dplyr::select(Time, Estimate, Std..Error.for.Estimate) %>%
dplyr::rename(year = "Time",
r = "Estimate",
se = "Std..Error.for.Estimate")
# Join everything ========================================================================
df<- left_join(pred_N_Kusko, juv_index)
View(df)
# Join everything ========================================================================
df<- left_join(pred_N_Kusko, juv_index) %>%
filter(!is.na(r))
View(df)
saveRDS(df,"data/input_dat_stan.csv")
save_csv(df,"data/input_dat_stan.csv")
write_csv(df,"data/input_dat_stan.csv")
read_csv(df,"data/input_dat_stan.csv")
df <- read_csv("data/input_dat_stan.csv")
df <- read_csv("data/input_dat_stan.csv")
warmups <- 1000
total_iterations <- 2000
max_treedepth <-  10
n_chains <-  4
n_cores <- 4
adapt_delta <- 0.95
data <- list(n = nrow(df),
r = df$r,
ssb = df$ssb,
max_r = max(df$r)
)
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_V1.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
init = list(
list(
h = 0.4,
log_alpha = log(1 * data$max_r),
log_beta = log(2* max(sal_data$ssb))
),
list(
h = 0.21,
log_alpha = log(3 * data$max_r),
log_beta = log(.5 *max(sal_data$ssb))
),
list(
h = 0.8,
log_alpha = log(1 * data$max_r),
log_beta = log(1.1*max(sal_data$ssb))
),
list(
h = 0.3,
log_alpha = log(.8 * data$max_r),
log_beta = log(5*max(sal_data$ssb))
)
),
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta)
)
library(rstan)
df <- read_csv("data/input_dat_stan.csv")
warmups <- 1000
total_iterations <- 2000
max_treedepth <-  10
n_chains <-  4
n_cores <- 4
adapt_delta <- 0.95
data <- list(n = nrow(df),
r = df$r,
ssb = df$ssb,
max_r = max(df$r)
)
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_V1.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
init = list(
list(
h = 0.4,
log_alpha = log(1 * data$max_r),
log_beta = log(2* max(df$ssb))
),
list(
h = 0.21,
log_alpha = log(3 * data$max_r),
log_beta = log(.5 *max(df$ssb))
),
list(
h = 0.8,
log_alpha = log(1 * data$max_r),
log_beta = log(1.1*max(df$ssb))
),
list(
h = 0.3,
log_alpha = log(.8 * data$max_r),
log_beta = log(5*max(df$ssb))
)
),
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta)
)
rstanarm::launch_shinystan(bh_fit)
install.packages("rstanarm")
rstanarm::launch_shinystan(bh_fit)
library(rstan)
df <- read_csv("data/input_dat_stan.csv")
warmups <- 1000
total_iterations <- 2000
max_treedepth <-  10
n_chains <-  1
n_cores <- 4
adapt_delta <- 0.95
data <- list(n = nrow(df),
r = df$r,
ssb = df$ssb,
max_r = max(df$r)
)
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_V1.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
init = list(
list(
h = 0.4,
log_alpha = log(1 * data$max_r),
log_beta = log(2* max(df$ssb))
),
list(
h = 0.21,
log_alpha = log(3 * data$max_r),
log_beta = log(.5 *max(df$ssb))
),
list(
h = 0.8,
log_alpha = log(1 * data$max_r),
log_beta = log(1.1*max(df$ssb))
),
list(
h = 0.3,
log_alpha = log(.8 * data$max_r),
log_beta = log(5*max(df$ssb))
)
),
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta)
)
rstanarm::launch_shinystan(bh_fit)
library(rstan)
df <- read_csv("data/input_dat_stan.csv")
warmups <- 1000
total_iterations <- 2000
max_treedepth <-  10
n_chains <-  4
n_cores <- 4
adapt_delta <- 0.95
data <- list(n = nrow(df),
r = df$r,
ssb = df$ssb,
max_r = max(df$r)
)
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_V1.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
init = list(
list(
h = 0.4,
log_alpha = log(1 * data$max_r),
log_beta = log(2* max(df$ssb))
),
list(
h = 0.21,
log_alpha = log(3 * data$max_r),
log_beta = log(.5 *max(df$ssb))
),
list(
h = 0.8,
log_alpha = log(1 * data$max_r),
log_beta = log(1.1*max(df$ssb))
),
list(
h = 0.3,
log_alpha = log(.8 * data$max_r),
log_beta = log(5*max(df$ssb))
)
),
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta)
)
#rstanarm::launch_shinystan(bh_fit)
