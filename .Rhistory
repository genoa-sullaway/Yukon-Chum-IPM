sd = mean(sd)) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_sp))) %>%
dplyr::mutate(rowname = "sp")
ggplot(data = summ_n_sp) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
ggtitle("Spawners: obs and predicted")+
scale_x_continuous(breaks = c(2002, 2006,2010, 2015,2020)) +
theme_classic()
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# traceplot ========
traceplot(bh_fit,pars=  c( "theta1[1]" ,"theta1[2]" ,"theta1[3]" ,"theta1[4]" ,
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"))
traceplot(bh_fit,pars=  c( "D_scale" ))
traceplot(bh_fit,pars=  c( "log_c_1","log_c_2"))
traceplot(bh_fit,pars=  c( "log_catch_q" ))
traceplot(bh_fit,pars=  c(  "Dir_alpha"))
traceplot(bh_fit,pars=  c("sigma_sp"))
traceplot(bh_fit,pars=  c("sigma_juv"))
traceplot(bh_fit,pars=  c("sigma_catch"))
plot(bh_fit, show_density = FALSE, ci_level = 0.95,
pars=  c( "log_S"),
fill_color = "blue")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# traceplot ========
traceplot(bh_fit,pars=  c( "theta1[1]" ,"theta1[2]" ,"theta1[3]" ,"theta1[4]" ,
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"))
traceplot(bh_fit,pars=  c( "D_scale" ))
# Plot Observed vs Predicted ========
## Spawners ==========
pred_N_SP <- summary(bh_fit, pars = c("N_sp"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
# filter(!time>20) %>% # remove years without full return estimates
left_join(years)
# sum to compare with data
summ_n_sp <- pred_N_SP %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
sd = mean(sd)) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_sp))) %>%
dplyr::mutate(rowname = "sp")
ggplot(data = summ_n_sp) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
ggtitle("Spawners: obs and predicted")+
scale_x_continuous(breaks = c(2002, 2006,2010, 2015,2020)) +
theme_classic()
## brood year return ======
pred_N_brood_year_return <- summary(bh_fit, pars = c("N_brood_year_return"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = (1:20)) %>%
left_join(years)%>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_return),
obs = data_list_stan$data_stage_return)) %>%
mutate(rowname = "recruit")
ggplot(data = pred_N_brood_year_return) +
geom_line(aes(x=cal_year, y = mean)) +
geom_point(aes(x=cal_year, y = obs)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("brood year return"))
## harvest =========
pred_N_harvest <- summary(bh_fit, pars = c("N_catch"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
left_join(years) %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
se_mean = mean(se_mean)) %>%
dplyr::left_join( data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_harvest)), by ="cal_year") %>%
dplyr::mutate(rowname = "harvest")
ggplot(data = pred_N_harvest) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("Harvest, est and observed"))
## juveniles ======
# multiply by catch q to fit observations
catch_q <- summary(bh_fit, pars = c("log_catch_q"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
mutate(mean = exp(mean))
pred_N_j <- summary(bh_fit, pars = c("N_j"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = 1:nrow(.)) %>%
# filter(!time==22) %>%
left_join(years)
# plot proportions
# sum to compare with data
summ_n_j <- pred_N_j %>%
dplyr::mutate(mean_J_Q = mean*catch_q$mean,
se_mean = se_mean*catch_q$mean) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_juv ),
obs = c(data_list_stan$data_stage_j))) %>%
mutate(rowname = "juv")
ggplot(data = summ_n_j) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean_J_Q)) +
# geom_line(aes(x=time, y = mean), color = "green") +
geom_ribbon(aes(x=cal_year, ymin = mean_J_Q-se_mean,
ymax = mean_J_Q+se_mean), alpha = 0.5)+
ggtitle(("Juveniles, est and observed"))
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# traceplot ========
traceplot(bh_fit,pars=  c( "theta1[1]" ,"theta1[2]" ,"theta1[3]" ,"theta1[4]" ,
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"))
# Plot Observed vs Predicted ========
## Spawners ==========
pred_N_SP <- summary(bh_fit, pars = c("N_sp"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
# filter(!time>20) %>% # remove years without full return estimates
left_join(years)
# sum to compare with data
summ_n_sp <- pred_N_SP %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
sd = mean(sd)) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_sp))) %>%
dplyr::mutate(rowname = "sp")
ggplot(data = summ_n_sp) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
ggtitle("Spawners: obs and predicted")+
scale_x_continuous(breaks = c(2002, 2006,2010, 2015,2020)) +
theme_classic()
## brood year return ======
pred_N_brood_year_return <- summary(bh_fit, pars = c("N_brood_year_return"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = (1:20)) %>%
left_join(years)%>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_return),
obs = data_list_stan$data_stage_return)) %>%
mutate(rowname = "recruit")
ggplot(data = pred_N_brood_year_return) +
geom_line(aes(x=cal_year, y = mean)) +
geom_point(aes(x=cal_year, y = obs)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("brood year return"))
## harvest =========
pred_N_harvest <- summary(bh_fit, pars = c("N_catch"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
left_join(years) %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
se_mean = mean(se_mean)) %>%
dplyr::left_join( data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_harvest)), by ="cal_year") %>%
dplyr::mutate(rowname = "harvest")
ggplot(data = pred_N_harvest) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("Harvest, est and observed"))
## juveniles ======
# multiply by catch q to fit observations
catch_q <- summary(bh_fit, pars = c("log_catch_q"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
mutate(mean = exp(mean))
pred_N_j <- summary(bh_fit, pars = c("N_j"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = 1:nrow(.)) %>%
# filter(!time==22) %>%
left_join(years)
# plot proportions
# sum to compare with data
summ_n_j <- pred_N_j %>%
dplyr::mutate(mean_J_Q = mean*catch_q$mean,
se_mean = se_mean*catch_q$mean) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_juv ),
obs = c(data_list_stan$data_stage_j))) %>%
mutate(rowname = "juv")
ggplot(data = summ_n_j) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean_J_Q)) +
# geom_line(aes(x=time, y = mean), color = "green") +
geom_ribbon(aes(x=cal_year, ymin = mean_J_Q-se_mean,
ymax = mean_J_Q+se_mean), alpha = 0.5)+
ggtitle(("Juveniles, est and observed"))
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# traceplot ========
traceplot(bh_fit,pars=  c( "theta1[1]" ,"theta1[2]" ,"theta1[3]" ,"theta1[4]" ,
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"))
traceplot(bh_fit,pars=  c( "D_scale" ))
# Plot Observed vs Predicted ========
## Spawners ==========
pred_N_SP <- summary(bh_fit, pars = c("N_sp"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
# filter(!time>20) %>% # remove years without full return estimates
left_join(years)
# sum to compare with data
summ_n_sp <- pred_N_SP %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
sd = mean(sd)) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_sp))) %>%
dplyr::mutate(rowname = "sp")
ggplot(data = summ_n_sp) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
ggtitle("Spawners: obs and predicted")+
scale_x_continuous(breaks = c(2002, 2006,2010, 2015,2020)) +
theme_classic()
## brood year return ======
pred_N_brood_year_return <- summary(bh_fit, pars = c("N_brood_year_return"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = (1:20)) %>%
left_join(years)%>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_return),
obs = data_list_stan$data_stage_return)) %>%
mutate(rowname = "recruit")
ggplot(data = pred_N_brood_year_return) +
geom_line(aes(x=cal_year, y = mean)) +
geom_point(aes(x=cal_year, y = obs)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("brood year return"))
## harvest =========
pred_N_harvest <- summary(bh_fit, pars = c("N_catch"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
left_join(years) %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
se_mean = mean(se_mean)) %>%
dplyr::left_join( data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_harvest)), by ="cal_year") %>%
dplyr::mutate(rowname = "harvest")
ggplot(data = pred_N_harvest) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("Harvest, est and observed"))
## juveniles ======
# multiply by catch q to fit observations
catch_q <- summary(bh_fit, pars = c("log_catch_q"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
mutate(mean = exp(mean))
pred_N_j <- summary(bh_fit, pars = c("N_j"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = 1:nrow(.)) %>%
# filter(!time==22) %>%
left_join(years)
# plot proportions
# sum to compare with data
summ_n_j <- pred_N_j %>%
dplyr::mutate(mean_J_Q = mean*catch_q$mean,
se_mean = se_mean*catch_q$mean) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_juv ),
obs = c(data_list_stan$data_stage_j))) %>%
mutate(rowname = "juv")
ggplot(data = summ_n_j) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean_J_Q)) +
# geom_line(aes(x=time, y = mean), color = "green") +
geom_ribbon(aes(x=cal_year, ymin = mean_J_Q-se_mean,
ymax = mean_J_Q+se_mean), alpha = 0.5)+
ggtitle(("Juveniles, est and observed"))
# plot age comp through time =================
age_comp_dat <- data.frame(yukon_fall_obs_agecomp) %>%
dplyr::mutate(time = 1:21) %>%
left_join(years) %>%
gather(1:4, key = "age", value = "obs") %>%
dplyr::mutate(age = case_when(age == "abund_0.3" ~ 3,
age == "abund_0.4" ~ 4,
age == "abund_0.5" ~ 5,
age == "abund_0.6" ~ 6))
age_comp_Q <- summary(bh_fit, pars = c("q"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:21, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
left_join(years) %>%
left_join( age_comp_dat) %>%
rename(pred = "mean") %>%
dplyr::select(time,age,pred,obs) %>%
gather(3:4, key = "id", value = "value")
ggplot(data= age_comp_Q) +
geom_line(aes(x=time, y = value, group = id, color = id)) +
facet_wrap(~age, scales = "free") +
theme_classic() +
ylab("Proportion")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
plot(bh_fit, show_density = FALSE, ci_level = 0.95,
pars=  c( "log_F"),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# Plot Observed vs Predicted ========
## Spawners ==========
pred_N_SP <- summary(bh_fit, pars = c("N_sp"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
# filter(!time>20) %>% # remove years without full return estimates
left_join(years)
# sum to compare with data
summ_n_sp <- pred_N_SP %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
sd = mean(sd)) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_sp))) %>%
dplyr::mutate(rowname = "sp")
ggplot(data = summ_n_sp) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
ggtitle("Spawners: obs and predicted")+
scale_x_continuous(breaks = c(2002, 2006,2010, 2015,2020)) +
theme_classic()
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
plot(bh_fit, show_density = FALSE, ci_level = 0.95,
pars=  c(  "log_c_1","log_c_2"),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = 1, #n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose=FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
install.packages("priorsense")
install.packages("priorsense")
# install.packages("remotes")
remotes::install_github("n-kall/priorsense", ref = "development")
# install.packages("remotes")
remotes::install_github("n-kall/priorsense", ref = "development")
