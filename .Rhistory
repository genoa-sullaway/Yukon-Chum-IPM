rename(pred = "mean") %>%
cbind(obs = data_list_stan$p_obs) %>%
dplyr::select(1,2,9,5,6) %>%
gather(2:3, key = "key", value = "value") %>%
dplyr::mutate(X10. = case_when(key == "obs" ~ NA,
TRUE ~ X10.),
X90. = case_when(key == "obs" ~ NA,
TRUE ~ X90.),
rowname = case_when(rowname == "p[1]" ~ "Age 3",
rowname == "p[2]" ~ "Age 4",
rowname == "p[3]" ~ "Age 5",
rowname == "p[4]" ~ "Age 6"))
ggplot(data = age_comp, aes(x= rowname, y = value, group = key,
color = key)) +
geom_point() +
geom_errorbar(aes(ymin = X10., ymax = X90.,group = key, color = key, width = 0.1))+
theme_classic() +
theme(legend.title = element_blank()) +
xlab(" ") +
ylab("Proportion") +
ggtitle("Age Composition")
# Productivity =======
productivity1 <- summary(bh_fit, pars = c("p_1"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate( variable = "p_1",
time =  1:nrow(.))
productivity2 <- summary(bh_fit, pars = c("p_2"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate( variable = "p_2",
time =  1:nrow(.))
productivity <- rbind(productivity1,productivity2) %>%
left_join(years) %>%
dplyr::mutate(variable = case_when(variable == "p_1" ~ "Juvenile Productivity",
variable == "p_2" ~ "Marine Productivity"))
ggplot(data = productivity, aes(x=cal_year, y = mean, group = variable ,color = variable)) +
geom_line( ) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean), alpha = 0.5) +
facet_wrap(~variable, scales = "free")
ggplot(data = productivity, aes(x=cal_year, y = mean, group = variable ,color = variable)) +
geom_line( ) +
geom_ribbon(aes(x=cal_year, ymin = X10.,
ymax = X90.,
), alpha = 0.5) +
theme_classic() +
xlab("Calendar Year") +
ylab("Productivity") +
theme(legend.title = element_blank())
# Survival ======
kappasurvival <- summary(bh_fit, pars = c("kappa_marine_survival", "kappa_j_survival"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:21, length.out = nrow(.)),
variable = case_when(grepl("kappa_marine",rowname) ~ "Marine Survival",
grepl("kappa_j",rowname) ~ "Juvenile Survival")) %>%
left_join(years)
ggplot(data = kappasurvival,
aes(x=cal_year, y = mean, group = variable ,color = variable)) +
geom_line( ) +
geom_ribbon(aes(x=cal_year, ymin = mean-sd,
ymax = mean+sd), alpha = 0.5) +
scale_x_continuous(breaks = c(2002,2006,2010, 2015,2020, 2022)) +
theme_classic() +
xlab("Brood Year") +
ylab("Survival") +
theme(legend.title = element_blank())
# plot theta ========
## PP =========
theta_df <- as.data.frame(bh_fit, pars = c(#"theta1[1]",
"theta_1_1_pp","theta_1_2_pp","theta_1_3_pp",
"theta_2_1_pp","theta_2_2_pp", "theta_2_3_pp","theta_2_4_pp")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:7, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta_1_1_pp" ~ "NBS July/August Temperature",
rowname== "theta_1_2_pp" ~ "Large Zooplankton Index",
rowname=="theta_1_3_pp" ~ "Gelatinous Zooplankton Index",
rowname== "theta_2_1_pp" ~ "Aleutian Winter Temperature",
rowname=="theta_2_2_pp" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta_2_3_pp" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta_2_4_pp" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("NBS July/August Temperature",
"Large Zooplankton Index",
"Gelatinous Zooplankton Index",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c("NBS July/August Temperature",
"Large Zooplankton Index",
"Gelatinous Zooplankton Index") ~ "Juvenile",
variable %in% c("Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5, color = "white") +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
# panel.border = element_rect(color = "white"), #element_blank(),
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
# panel.grid.minor = element_blank(),
# panel.grid.major = element_blank(),
# plot.title = element_text(color = "white"),
strip.text.x = element_blank(),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"),
# panel.spacing.x=unit(0.5, "lines"),
panel.spacing.y=unit(0, "lines")
) +
geom_vline(xintercept=0, color = "white")+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
theta_plot
ggsave("output/theta_plot.png", width = 7, height = 4, bg = "transparent")
# plot theta ========
## PP =========
theta_df <- as.data.frame(bh_fit, pars = c(#"theta1[1]",
"theta_1_1_pp","theta_1_2_pp","theta_1_3_pp",
"theta_2_1_pp","theta_2_2_pp", "theta_2_3_pp","theta_2_4_pp")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:7, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta_1_1_pp" ~ "NBS July/August Temperature",
rowname== "theta_1_2_pp" ~ "Large Zooplankton Index",
rowname=="theta_1_3_pp" ~ "Yukon River Mainstem Discharge", #  "Gelatinous Zooplankton Index",
rowname== "theta_2_1_pp" ~ "Aleutian Winter Temperature",
rowname=="theta_2_2_pp" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta_2_3_pp" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta_2_4_pp" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("NBS July/August Temperature",
"Large Zooplankton Index",
"Yukon River Mainstem Discharge",
# "Gelatinous Zooplankton Index",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c("NBS July/August Temperature",
"Large Zooplankton Index",
"Yukon River Mainstem Discharge",
"Gelatinous Zooplankton Index") ~ "Juvenile",
variable %in% c("Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5, color = "white") +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
# panel.border = element_rect(color = "white"), #element_blank(),
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
# panel.grid.minor = element_blank(),
# panel.grid.major = element_blank(),
# plot.title = element_text(color = "white"),
strip.text.x = element_blank(),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"),
# panel.spacing.x=unit(0.5, "lines"),
panel.spacing.y=unit(0, "lines")
) +
geom_vline(xintercept=0, color = "white")+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
ggsave("output/theta_plot.png", width = 7, height = 4, bg = "transparent")
# plot theta ========
## PP =========
theta_df <- as.data.frame(bh_fit, pars = c(#"theta1[1]",
"theta_1_1_pp","theta_1_2_pp","theta_1_3_pp",
"theta_2_1_pp","theta_2_2_pp", "theta_2_3_pp","theta_2_4_pp")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:7, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta_1_1_pp" ~ "NBS July/August Temperature",
rowname== "theta_1_2_pp" ~ "Large Zooplankton Index",
rowname=="theta_1_3_pp" ~ "Yukon River Mainstem Discharge", #  "Gelatinous Zooplankton Index",
rowname== "theta_2_1_pp" ~ "Aleutian Winter Temperature",
rowname=="theta_2_2_pp" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta_2_3_pp" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta_2_4_pp" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
# "Gelatinous Zooplankton Index",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c( "Yukon River Mainstem Discharge",
"NBS July/August Temperature",
"Large Zooplankton Index",
"Gelatinous Zooplankton Index") ~ "Juvenile",
variable %in% c("Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.95)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5, color = "white") +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
# panel.border = element_rect(color = "white"), #element_blank(),
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "white", fill = NA),
# panel.grid.minor = element_blank(),
# panel.grid.major = element_blank(),
# plot.title = element_text(color = "white"),
strip.text.x = element_blank(),
axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,color = "white"),
axis.text.y = element_text(color = "white"),
axis.title.y = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.ticks.y = element_line(color = "white"),
axis.ticks.x = element_line(color = "white"),
# panel.spacing.x=unit(0.5, "lines"),
panel.spacing.y=unit(0, "lines")
) +
geom_vline(xintercept=0, color = "white")+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
ggsave("output/theta_plot.png", width = 7, height = 4, bg = "transparent")
# Plot Gelatinous Zoops and Juvenile Abundance by brood year ==============
sst_zoop_cov <- read_csv("data/processed_covariates/stage_a_all.csv") %>%
dplyr::mutate(SST_CDD_NBS = as.numeric(scale(SST_CDD_NBS)),
yukon_mean_discharge = as.numeric(scale(yukon_mean_discharge))) %>%
# zoop are already mean scaled
dplyr::rename(cal_year = Year) %>%
dplyr::mutate(brood_year = cal_year-1) %>%
dplyr::select(brood_year,SST_CDD_NBS, yukon_mean_discharge,Large_zoop,
Cnideria)
pred_N_jpp_cov <- summary(bh_fit, pars = c("N_j_pp"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = 1:nrow(.)) %>%
left_join(data.frame(time = c(1:nrow(.)),
brood_year = c(data_list_stan$years_data_juv ),
obs = c(data_list_stan$data_stage_j))) %>%
dplyr::mutate(ci_10=(X10.),
ci_90=(X90.),
mean = as.numeric(scale(mean))) %>%
left_join(sst_zoop_cov) %>%
dplyr::select(brood_year,SST_CDD_NBS,yukon_mean_discharge,Large_zoop,
Cnideria,mean,ci_10,ci_90)
ggplot(data =pred_N_jpp_cov) +
geom_line(aes(x=brood_year, y = mean)) +
geom_line(aes(x=brood_year, y = yukon_mean_discharge), color = "purple") +
labs(caption = "purple is the covariate")
ggplot(data =pred_N_jpp_cov) +
geom_line(aes(x=brood_year, y = mean)) +
geom_line(aes(x=brood_year, y = SST_CDD_NBS), color = "purple") +
labs(caption = "purple is the covariate")
ggplot(data =pred_N_jpp_cov) +
geom_line(aes(x=brood_year, y = mean)) +
geom_line(aes(x=brood_year, y = Large_zoop), color = "purple") +
labs(caption = "purple is the covariate")
# Create covariate for stage 1, representing ocean entry marine diet index
# current spatial trim is just eyeballing from vast chum index that curry sent
# current latitude range that I trim zoop index too: 58-65
# Temporal trim to include month 7-10
library(here)
library(tidyverse)
library(dplyr)
library(lubridate)
library(mgcv)
DF  <- read.csv(here("data", "Processed_Data", "NBS_Zoop_Process_Final.csv"))
zoop <- DF %>%
group_by(CRUISE,HAUL_ID,YEAR,MONTH,DAY,LAT,LON, DATA_SOURCE,TAXON_NAME) %>% # sum across life stages
dplyr::summarise(EST_NUM_PERM3 =  sum(EST_NUM_PERM3)) %>%
filter(!LAT<58,
!LAT>65,
!LON> -155,
!LON< -172,
MONTH %in% c(5,6,7,8,9)) %>%
unite("date", c(YEAR, MONTH, DAY), sep = "/", remove = FALSE) %>%
dplyr::mutate(date = as.Date(date, "%Y/%m/%d"),
DOY = yday(date),
TAXA_COARSE = case_when(grepl(pattern = "Themisto", x=TAXON_NAME, ignore.case = TRUE) ~ "large_zoop",
TAXON_NAME %in% c("Calanus pacificus", "Calanus marshallae", "Calanus glacialis") ~ "large_zoop",
grepl(pattern = "Copepod_large", x=TAXON_NAME, ignore.case = TRUE) ~ "large_zoop",
grepl(pattern = "Neocalanus", x=TAXON_NAME, ignore.case = TRUE) ~ "large_zoop",
grepl(pattern = "Cnidaria", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
grepl(pattern = "Larvacea", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
grepl(pattern = "Medusozoa", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
grepl(pattern = "Hydrozoa", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
grepl(pattern = "Scyphozoa", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
grepl(pattern = "Thaliacea", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
grepl(pattern = "Ctenophora", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
grepl(pattern = "Oikopleura", x=TAXON_NAME, ignore.case = TRUE) ~ "Cnideria",
TRUE ~ "other"))
names <- data.frame(unique(zoop$TAXON_NAME))
# Large zoop (Themisto, calanus, large copepods) ================
large_zoop<- zoop %>%
filter(TAXA_COARSE == "large_zoop")
## plot raw data ===========
# are there differences between EMA and ECOFOCI just based on plotting averages
large_zoopsumm <- large_zoop %>%
filter(!YEAR <1999) %>%
group_by(DATA_SOURCE,YEAR) %>%
dplyr::summarise(mean = mean(EST_NUM_PERM3),
n= nrow(.),
se= sd(EST_NUM_PERM3)/sqrt(n))
ggplot(data = large_zoopsumm, aes(x=YEAR, y = mean, group =DATA_SOURCE, color =DATA_SOURCE )) +
geom_point()+
geom_line() +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se))  +
ggtitle("Large Zoop")
# different plot large zoop =============
testLZ <- large_zoop %>%
filter(!YEAR <1999) %>%
group_by(TAXON_NAME,YEAR) %>%
dplyr::summarise(mean = mean(EST_NUM_PERM3),
n= nrow(.),
se= sd(EST_NUM_PERM3)/sqrt(n))
ggplot(data = testLZ, aes(x=YEAR, y = mean, group =TAXON_NAME, color =TAXON_NAME )) +
geom_point()+
geom_line() +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se))  +
ggtitle("Large Zoop") +
facet_wrap(~TAXON_NAME, scales = "free")
## Index Standardization for Large Zoop =================
mod_df_largezoop <- large_zoop %>%
filter(!YEAR <2000) %>%
group_by(DATA_SOURCE,YEAR, DOY,LAT,LON) %>% # sum across species
dplyr::summarise(sum_EST_NUM_PERM3 = sum(EST_NUM_PERM3))  %>%
mutate(YEAR = as.factor(YEAR),
DATA_SOURCE = as.factor(DATA_SOURCE)) %>%
data.frame()
large_zoop_index <- mgcv::gam( sqrt(sum_EST_NUM_PERM3) ~ YEAR + DATA_SOURCE +
s(LAT, LON) + s(DOY),
data = mod_df_largezoop,
family = tw(link = "log"))
summary(large_zoop_index)
gratia::draw(large_zoop_index)
temp <- expand.grid(YEAR = c(unique(mod_df_largezoop$YEAR)),
DATA_SOURCE = c("EcoDAAT"))
large_pred_df <- cbind(temp,
data.frame(LAT = mean(mod_df_largezoop$LAT),
LON = mean(mod_df_largezoop$LON),
DOY = mean(mod_df_largezoop$DOY)))
temp <- predict(large_zoop_index, large_pred_df, se.fit = TRUE, response = TRUE )
large_pred_df$pred <- exp(temp[[1]])
large_pred_df$se <-   exp(temp[[2]])
ggplot(data = large_pred_df, aes(x=YEAR, y = pred,
group =DATA_SOURCE, color =DATA_SOURCE)) +
geom_point()+
geom_line() +
geom_errorbar(aes(ymin = pred-se, ymax = pred+se), width = 0.1)  +
ggtitle("Large Zoop Modeled Index") +
theme_classic()
# Gelatinous Zoop - Cnideria ===============
cnideria_zoop<- zoop %>%
filter(TAXA_COARSE == "Cnideria") %>%
filter(!EST_NUM_PERM3>3000 )
zoop_cnideria_summ <- cnideria_zoop %>%
filter(!YEAR <1999) %>%
group_by(DATA_SOURCE, YEAR) %>%
dplyr::summarise(mean = mean(EST_NUM_PERM3),
n= nrow(.),
se = sd(EST_NUM_PERM3)/sqrt(n))
ggplot(data = zoop_cnideria_summ, aes(x=YEAR, y = mean,
group =DATA_SOURCE, color =DATA_SOURCE )) +
geom_point()+
geom_line() +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se))
# different plot large zoop =============
testC <- cnideria_zoop %>%
filter(!YEAR <1999) %>%
group_by(TAXON_NAME,YEAR) %>%
dplyr::summarise(mean = mean(EST_NUM_PERM3),
n= nrow(.),
se= sd(EST_NUM_PERM3)/sqrt(n))
ggplot(data = testC, aes(x=YEAR, y = mean, group =TAXON_NAME, color =TAXON_NAME )) +
geom_point()+
geom_line() +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se))  +
facet_wrap(~TAXON_NAME, scales = "free")
## Index Standardization for Cnideria =================
mod_df_cnideriazoop <-  cnideria_zoop %>%
filter(!YEAR <1999) %>%
group_by(DATA_SOURCE,YEAR, DOY,LAT,LON) %>% # sum across species
dplyr::summarise(sum_EST_NUM_PERM3 = sum(EST_NUM_PERM3))  %>%
mutate(YEAR = as.factor(YEAR),
DATA_SOURCE = as.factor(DATA_SOURCE)) %>%
data.frame()
cnideria_zoop_index <- mgcv::gam( sqrt(sum_EST_NUM_PERM3) ~ YEAR + DATA_SOURCE +
s(LAT, LON) + s(DOY),
data = mod_df_cnideriazoop,
family = tw(link = "log"))
summary(cnideria_zoop_index)
gratia::draw(cnideria_zoop_index)
temp <- expand.grid(YEAR = c(unique(mod_df_cnideriazoop$YEAR)),
DATA_SOURCE = c("EcoDAAT"))
cnideria_pred_df <- cbind(temp,
data.frame(LAT = mean(mod_df_cnideriazoop$LAT),#currently using M2, survey mean: rep(mean(scale_dat$LAT), times = nrow(DF1)),
LON = mean(mod_df_cnideriazoop$LON), #rep(mean(scale_dat$LON), times = nrow(DF1)),
DOY = mean(mod_df_cnideriazoop$DOY)))
temp <- predict(cnideria_zoop_index, cnideria_pred_df, se.fit = TRUE )
cnideria_pred_df$pred <-  exp(temp[[1]])
cnideria_pred_df$se <-   exp(temp[[2]])
cnideria_pred_df <- cnideria_pred_df %>%
dplyr::mutate( id = "Cnideria")
add <-  data.frame(YEAR = c(as.factor(2023)),
Large_zoop = c(2.5),
Cnideria = c(10.4))
# bind both data sets ==========
pred_df <- large_pred_df %>%
dplyr::mutate( id = "Large_zoop") %>%
rbind(cnideria_pred_df) %>%
dplyr::select(YEAR, pred, id) %>%
spread(id, pred)  %>%
rbind( add) %>%
dplyr::mutate(YEAR = as.numeric(as.character(YEAR)),
Large_zoop = as.numeric(scale(Large_zoop)),
Cnideria = as.numeric(scale(Cnideria)))
## plots =============
ggplot( ) +
geom_line(data = pred_df, aes(x=YEAR, y = Large_zoop), color = "orange")+
geom_line(data = pred_df, aes(x=YEAR, y = Cnideria), color = "green")+
# geom_errorbar(aes(ymin = pred-se, ymax = pred+se), width = 0.1)  +
ggtitle("mean scaled Modeled Index") +
theme_classic()
# save data  =============
write_csv(pred_df, "data/processed_covariates/Stage_A_Zooplankton_Index.csv")
# OLD ========
# these are not used in model ============
## Estimate Spatial Temporal Fields? ============================
largezoop_ST_index <- mgcv::gam(sqrt(sum_EST_NUM_PERM3) ~ YEAR + DATA_SOURCE +
s(LON,LAT, by = YEAR) + s(DOY),
data = mod_df_largezoop,
family = tw(link = "log"))
cnideria_ST_index <- mgcv::gam(sqrt(sum_EST_NUM_PERM3) ~ YEAR + DATA_SOURCE +
s(LON,LAT, by = YEAR) + s(DOY),
data = mod_df_cnideriazoop,
family = tw(link = "log"))
