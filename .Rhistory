"Pollock Recruitment",
"Mean Spawner Size") ~ "Juvenile",
variable %in% c( "Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5 ) +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
# legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
# panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_blank(),
# axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1 ),
# axis.text.y = element_text(color = "white"),
# axis.title.y = element_text(color = "white"),
# axis.title.x = element_text(color = "white"),
# axis.ticks.y = element_line(color = "white"),
# axis.ticks.x = element_line(color = "white"),
panel.spacing.y=unit(0, "lines")) +
geom_vline(xintercept=0 )+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose = FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
View(theta_df)
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose = FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# load model ==============
bh_fit <- read_rds("output/stan_fit_DATA.RDS")
theta_df <- as.data.frame(bh_fit, pars = c("theta1[1]", "theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:8, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta1[1]" ~ "NBS July/August Temperature",
rowname== "theta1[2]"~ "Yukon River - Mean Flow",
rowname=="theta1[3]" ~ "Pollock Recruitment",
rowname=="theta1[4]" ~ "Mean Spawner Size",
rowname=="theta2[1]" ~ "Aleutian Winter Temperature",
rowname=="theta2[2]" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta2[3]" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta2[4]" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size") ~ "Juvenile",
variable %in% c( "Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high))
View(theta_df)
# plot estimated productivity ======
productivity1 <- summary(bh_fit, pars = c("p_1"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate( variable = "p_1",
time =  1:nrow(.))
productivity2 <- summary(bh_fit, pars = c("p_2"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate( variable = "p_2",
time =  1:nrow(.))
productivity <- rbind(productivity1,productivity2)
ggplot(data = productivity, aes(x=time, y = mean, group = variable ,color = variable)) +
geom_line( ) +
geom_ribbon(aes(x=time, ymin = mean-se_mean,
ymax = mean+se_mean), alpha = 0.5) +
facet_wrap(~variable, scales = "free")
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose = FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
# plot estimated productivity ======
productivity1 <- summary(bh_fit, pars = c("p_1"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate( variable = "p_1",
time =  1:nrow(.))
productivity2 <- summary(bh_fit, pars = c("p_2"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate( variable = "p_2",
time =  1:nrow(.))
productivity <- rbind(productivity1,productivity2)
ggplot(data = productivity, aes(x=time, y = mean, group = variable ,color = variable)) +
geom_line( ) +
geom_ribbon(aes(x=time, ymin = mean-se_mean,
ymax = mean+se_mean), alpha = 0.5) +
facet_wrap(~variable, scales = "free")
# parameter plots ========
plot(bh_fit, show_density = TRUE, ci_level = 0.95,
pars=  c( "theta1[1]","theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]"
),
fill_color = "blue")
# Plot Observed vs Predicted ========
## Spawners ==========
pred_N_SP <- summary(bh_fit, pars = c("N_sp"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
# filter(!time>20) %>% # remove years without full return estimates
left_join(years)
# sum to compare with data
summ_n_sp <- pred_N_SP %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
sd = mean(sd)) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_sp))) %>%
dplyr::mutate(rowname = "sp")
ggplot(data = summ_n_sp) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
ggtitle("Spawners: obs and predicted")+
scale_x_continuous(breaks = c(2002, 2006,2010, 2015,2020)) +
theme_classic()
## recruit ==========
pred_N_recruit <- summary(bh_fit, pars = c("N_recruit"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
# dplyr::mutate(time = 1:17) %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
# filter(!time>20) %>% # remove years without full return estimates
left_join(years)
# sum to compare with data
summ_n_rec <- pred_N_recruit %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
sd = mean(sd)) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_return))) %>%
dplyr::mutate(rowname = "rec")
ggplot(data = summ_n_rec) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
# geom_ribbon(aes(x=cal_year, ymin = mean-sd,
#                 ymax = mean+sd)) +
ggtitle("recruits: obs and predicted")+
scale_x_continuous(breaks = c(2002, 2006,2010, 2015,2020)) +
theme_classic()
## brood year return ======
pred_N_brood_year_return <- summary(bh_fit, pars = c("N_brood_year_return"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = (1:20)) %>%
left_join(years)%>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_return),
obs = data_list_stan$data_stage_return)) %>%
mutate(rowname = "recruit")
ggplot(data = pred_N_brood_year_return) +
geom_line(aes(x=cal_year, y = mean)) +
geom_point(aes(x=cal_year, y = obs)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("brood year return"))
## harvest =========
pred_N_harvest <- summary(bh_fit, pars = c("N_catch"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:26, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
left_join(years) %>%
group_by(cal_year) %>%
summarise(mean = sum(mean),
se_mean = mean(se_mean)) %>%
dplyr::left_join( data.frame(cal_year = c(data_list_stan$years_data_sp),
obs = c(data_list_stan$data_stage_harvest)), by ="cal_year") %>%
dplyr::mutate(rowname = "harvest")
ggplot(data = pred_N_harvest) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean)) +
geom_ribbon(aes(x=cal_year, ymin = mean-se_mean,
ymax = mean+se_mean))+
ggtitle(("Harvest, est and observed"))
## juveniles ======
# multiply by catch q to fit observations
catch_q <- summary(bh_fit, pars = c("log_catch_q"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
mutate(mean = exp(mean))
pred_N_j <- summary(bh_fit, pars = c("N_j"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = 1:nrow(.)) %>%
# filter(!time==22) %>%
left_join(years)
# plot proportions
# sum to compare with data
summ_n_j <- pred_N_j %>%
dplyr::mutate(mean_J_Q = mean*catch_q$mean,
se_mean = se_mean*catch_q$mean) %>%
left_join(data.frame(cal_year = c(data_list_stan$years_data_juv ),
obs = c(data_list_stan$data_stage_j))) %>%
mutate(rowname = "juv")
ggplot(data = summ_n_j) +
geom_point(aes(x=cal_year, y = obs)) +
geom_line(aes(x=cal_year, y = mean_J_Q)) +
# geom_line(aes(x=time, y = mean), color = "green") +
geom_ribbon(aes(x=cal_year, ymin = mean_J_Q-se_mean,
ymax = mean_J_Q+se_mean), alpha = 0.5)+
ggtitle(("Juveniles, est and observed"))
# plot age comp through time =================
age_comp_dat <- data.frame(yukon_fall_obs_agecomp) %>%
dplyr::mutate(time = 1:21) %>%
left_join(years) %>%
gather(1:4, key = "age", value = "obs") %>%
dplyr::mutate(age = case_when(age == "abund_0.3" ~ 3,
age == "abund_0.4" ~ 4,
age == "abund_0.5" ~ 5,
age == "abund_0.6" ~ 6))
age_comp_Q <- summary(bh_fit, pars = c("q"),
probs = c(0.1, 0.9))$summary %>%
data.frame() %>%
rownames_to_column()  %>%
dplyr::mutate(time = rep(1:21, each=4),
age = rep(3:6, length.out = nrow(.))) %>%
left_join(years) %>%
left_join( age_comp_dat) %>%
rename(pred = "mean") %>%
dplyr::select(time,age,pred,obs) %>%
gather(3:4, key = "id", value = "value")
ggplot(data= age_comp_Q) +
geom_line(aes(x=time, y = value, group = id, color = id)) +
facet_wrap(~age, scales = "free") +
theme_classic() +
ylab("Proportion")
# load model ==============
bh_fit <- read_rds("output/stan_fit_DATA.RDS")
theta_df <- as.data.frame(bh_fit, pars = c("theta1[1]", "theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:8, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta1[1]" ~ "NBS July/August Temperature",
rowname== "theta1[2]"~ "Yukon River - Mean Flow",
rowname=="theta1[3]" ~ "Pollock Recruitment",
rowname=="theta1[4]" ~ "Mean Spawner Size",
rowname=="theta2[1]" ~ "Aleutian Winter Temperature",
rowname=="theta2[2]" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta2[3]" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta2[4]" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size") ~ "Juvenile",
variable %in% c( "Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5 ) +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
# legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
# panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_blank(),
# axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1 ),
# axis.text.y = element_text(color = "white"),
# axis.title.y = element_text(color = "white"),
# axis.title.x = element_text(color = "white"),
# axis.ticks.y = element_line(color = "white"),
# axis.ticks.x = element_line(color = "white"),
panel.spacing.y=unit(0, "lines")) +
geom_vline(xintercept=0 )+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
# load model ==============
bh_fit <- read_rds("output/stan_fit_DATA.RDS")
theta_df <- as.data.frame(bh_fit, pars = c("theta1[1]", "theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:8, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta1[1]" ~ "NBS July/August Temperature",
rowname== "theta1[2]"~ "Yukon River - Mean Flow",
rowname=="theta1[3]" ~ "Pollock Recruitment",
rowname=="theta1[4]" ~ "Mean Spawner Size",
rowname=="theta2[1]" ~ "Aleutian Winter Temperature",
rowname=="theta2[2]" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta2[3]" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta2[4]" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size") ~ "Juvenile",
variable %in% c( "Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high))
library(tidyverse)
library(tidybayes)
library(here)
library(bayesplot)
library(bayestestR)
# load model ==============
bh_fit <- read_rds("output/stan_fit_DATA.RDS")
theta_df <- as.data.frame(bh_fit, pars = c("theta1[1]", "theta1[2]","theta1[3]","theta1[4]",
"theta2[1]","theta2[2]","theta2[3]","theta2[4]")) %>%
mutate(draw = 1:nrow(.)) %>%
gather(1:8, key = "rowname", value = "value") %>%
dplyr::mutate(variable = case_when(rowname=="theta1[1]" ~ "NBS July/August Temperature",
rowname== "theta1[2]"~ "Yukon River - Mean Flow",
rowname=="theta1[3]" ~ "Pollock Recruitment",
rowname=="theta1[4]" ~ "Mean Spawner Size",
rowname=="theta2[1]" ~ "Aleutian Winter Temperature",
rowname=="theta2[2]" ~ "Chum Salmon Hatchery Release Abundance",
rowname=="theta2[3]" ~ "Pink Salmon Hatchery Release Abundance",
rowname=="theta2[4]" ~ "Fullness Index"),
variable = factor(variable, levels = rev(c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size",
"Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index"))),
stage = case_when(variable %in% c("NBS July/August Temperature",
"Yukon River - Mean Flow",
"Pollock Recruitment",
"Mean Spawner Size") ~ "Juvenile",
variable %in% c( "Aleutian Winter Temperature",
"Chum Salmon Hatchery Release Abundance",
"Pink Salmon Hatchery Release Abundance",
"Fullness Index") ~ "Marine")) %>%
group_by(stage,variable) %>%
dplyr::summarise(mean = mean(value),
ci_80_low = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_low),
ci_80_high = as.numeric(ci(value, method = "HDI", ci = 0.65)$CI_high),
ci_95_low = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_low),
ci_95_high = as.numeric(ci(value, method = "HDI", ci = 0.80)$CI_high))
theta_plot <- ggplot(data = theta_df,
aes(x= mean, y = variable,
group = variable, color = stage)) +
geom_errorbar(aes(xmin =ci_95_low, xmax = ci_95_high),
width = 0, linewidth = 0.5 ) +
geom_point(size = 2) +
geom_errorbar(aes(xmin =ci_80_low, xmax = ci_80_high), linewidth = 1.5, width = 0) +
theme_classic() +
scale_color_manual(values =c("#EAAA00", "#2d9d92")) +
theme(panel.background = element_blank(), #element_rect(fill = "black", colour = NA),
plot.background = element_blank(), #element_rect(fill = "black", colour = NA),
legend.background = element_blank(),
# legend.text = element_text(color = "white"),
legend.title = element_blank(),#"none",
strip.text = element_blank( ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
# panel.border = element_rect(colour = "white", fill = NA),
strip.text.x = element_blank(),
# axis.line = element_line(color = "white"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1 ),
# axis.text.y = element_text(color = "white"),
# axis.title.y = element_text(color = "white"),
# axis.title.x = element_text(color = "white"),
# axis.ticks.y = element_line(color = "white"),
# axis.ticks.x = element_line(color = "white"),
panel.spacing.y=unit(0, "lines")) +
geom_vline(xintercept=0 )+
ylab("") +
xlab("Mean Covariate Coefficient Value") +
facet_wrap(~stage, scales = "free_y", ncol = 1)
theta_plot
# call mod  ===========================
bh_fit <- stan(
file = here::here("scripts", "stan_mod_BH_dat.stan"),
data = data_list_stan,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
verbose = FALSE,
control = list(adapt_delta = 0.99)
)
write_rds(bh_fit, "output/stan_fit_DATA.RDS")
