pred_catch <- pred_catch %>%
data.frame()
names(pred_catch) <- weeks_label
pred_catch <- pred_catch %>%
mutate(year = 1988:2007) %>%
gather(1:12, key = "week", value = "pred_catch")
join <- left_join(obs_catch,pred_catch) %>%
left_join(bue_pred_catch_df) %>%
gather(3:5, key = "id", value = "catch")
ggplot(data = join %>% filter(!id=="bue_pred_catch"), aes(x=week, y=catch/1000, group = id, color = id)) +
geom_point() +
geom_line() +
theme_classic() +
facet_wrap(~year,scales="free")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
pred_catch_bue_obs<- ggplot(data = join %>% filter(!id=="pred_catch"), aes(x=year, y=catch/1000, group = id, color = id)) +
geom_point() +
geom_line() +
theme_classic() +
facet_wrap(~week,scales="free") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(caption = "Observed catch vs Bue predicted catch")
pred_catch_obs_gs <- ggplot(data = join %>% filter(!id=="bue_pred_catch"), aes(x=year, y=catch/1000, group = id, color = id)) +
geom_point() +
geom_line() +
theme_classic() +
facet_wrap(~week,scales="free") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(caption = "Observed catch vs GS predicted catch")
#add bues in compare to mine
pred_catch_gs_bue<-ggplot(data = join%>% filter(!id=="obs_catch"), aes(x=year, y=catch/1000, group = id, color = id)) +
geom_point() +
geom_line() +
theme_classic() +
facet_wrap(~week,scales="free") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(caption = "Bue predicted catch vs GS predicted catch")
pdf("output/predicted_catch_plots.pdf")
pred_catch_obs_gs
pred_catch_bue_obs
pred_catch_gs_bue
dev.off()
# Plot predicted number per projects ======================================================================
pred_escape <-pre_outputs[[2]]
#
# escape %>%
#   gather(2:3, key = "id", value = "value")
#
# #add bues in compare to mine
# ggplot(data = escape, aes(x=year, y=value, group = id, color = id)) +
#   geom_point() +
#   geom_line() +
#   theme_classic() +
#   facet_wrap(~week,scales="free") +
#   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#Plot predicted per project =============================================
#from my model:
proj_names<-colnames(read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv"))[2:8]
expanded_per_proj <-data.frame(pre_outputs[[4]]) %>%
mutate(year = 1988:2007 )
names(expanded_per_proj)[1:7] <- proj_names
expanded_per_proj<- expanded_per_proj %>%
gather(1:projects, key = "project", value = "value") %>%
dplyr::mutate(id = "expanded_N_GS_mod")
# Bue's OBS values:
obs_escape_per_proj<-  read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < 2008 & year >1987) %>%
gather(2:(projects+1), key = "project", value = "value")%>%
dplyr::mutate(id = "obs_escape_per_proj")
# Bues predcited from excel
bue_pred_per_proj <- read_csv("data/Processed_Data/OLD/Bue_pred_escapement.csv")%>%
gather(2:(projects+1), key = "project", value = "value") %>%
rename(year = "Year") %>%
dplyr::mutate(id = "bue_pred_per_proj")
per_proj <- rbind(obs_escape_per_proj,bue_pred_per_proj,expanded_per_proj)
per_proj[per_proj == 0] <- NA
#add bue's in compare to mine
ggplot(data = per_proj %>% filter(!id == "obs_escape_per_proj"),
aes(x=year, y=value, group = id, color = id)) +
geom_point() +
geom_line() +
theme_classic() +
facet_wrap(~project,scales="free") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# same as above but sum across projects to just get total index:
pred_e<-data.frame(pre_outputs[[2]]) %>%
rename(value = "Subsistence") %>%
mutate(year = 1988:2007,
id = "predicted_escapement")
per_proj[is.na(per_proj)]<- 0
totol_E_df<- per_proj %>%
group_by(year, id) %>%
summarise(value = sum(value))%>%
rbind(pred_e)
#add bue's in compare to mine
ggplot(data = totol_E_df %>% filter(!id == "obs_escape_per_proj", year>1987, !year >2007),
aes(x=year, y=value, group = id, color = id)) +
geom_point() +
geom_line() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Start ==================================================================================================
# Project Name: AYK Chum Salmon Model
# Creator: Genoa Sullaway
# Date: Start June 2023
#
# Purpose: Compare estimated params from Bue excerl model to my R model
# Currently organized for the 1988-2007 version.
# Load Packages =========================================================================================
library(tidyverse)
library(here)
# Load data =========================================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") # this is from the older excel sheet, columns Q,R,FW
estimated_parameters<- readRDS("output/OLD_optim_output_par.RDS")
# Load data (below just for plotting) =========================================================================================
escapement <- read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < 2008 & year >1987)
proj_names<-colnames(escapement)[2:8]
# Plot N =========================================================================================
pred_N<-data.frame(Year = c(1988:2007),
pred_N_est= as.vector(c(estimated_parameters[2:21])))
est_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < 2008) %>%
left_join(pred_N) %>%
gather(2:3, key = "id", value = "value")
N_plot<-ggplot(data = est_N,aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
# plot observed vs my predictions
escapement_sum <-  read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987) %>%
gather(2:8, key = "project", value = "value")  %>%
group_by(year) %>%
dplyr::summarise(value = sum(value)) %>%
rename(Year = "year") %>%
dplyr::mutate(id = "obs_E_sum") %>%
rbind(est_N) %>%
filter(id %in% c("obs_E_sum", "pred_N_est"))
N_plot_observed<-ggplot(data = escapement_sum,aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot_observed
# Plot Slope =========================================================================================
pred_slope<-data.frame(project = c(proj_names),
pred_slope= as.vector(c(estimated_parameters[22:28])))
est_slope<- bue_estimated %>%
filter(param == "Slope") %>%
dplyr::mutate(project = word(year_or_project, 1),
Bue_slope = value) %>%
dplyr::select(c(4:5)) %>%
left_join(pred_slope) %>%
gather(2:3, key = "id", value = "value") #%>%
# mutate(value = case_when(id == "pred_slope" ~ value*4.5,
#                          TRUE ~ value))
### Plot predicted slope
slope_plot <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
labs(caption = "Pred Slope is from GS reconstruction model") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
### Plot predicted slope
slope_plot2 <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
facet_wrap(~id)
# Plot Q =========================================================================================
pred_Q<-data.frame(pred_Q= as.vector(c(estimated_parameters[1])))
est_Q<- bue_estimated %>%
filter(param == "Q") %>%
dplyr::mutate(Bue_Q = value) %>%
dplyr::select(c(4)) %>%
cbind(pred_Q) %>%
gather(1:2, key = "id", value = "value")
### Plot predicted slope
q_plot<-ggplot(data = est_Q,aes(x=id, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Q")
slope_plot
slope_plot2
q_plot
N_plot
pdf("output/Kusko_RR_Plots.pdf")
slope_plot
q_plot
N_plot
dev.off()
pdf("output/predicted_catch_plots.pdf")
pred_catch_gs_bue
pred_catch_obs_gs
pred_catch_bue_obs
dev.off()
(273/2
)
# Start ==================================================================================================
# Project Name: AYK Chum Salmon Model
# Creator: Genoa Sullaway
# Date: Start March 2023
#
# Purpose: Recreate ADFG Kuskokwim Chum Run reconstruction in R based on excel sheet
# based on Bue and Molyneaux Kuskokwim chum salmon run reconstruction
#
# Note: this script does the RR until 2007 to match the paper, see: Kusko_RunReconstruction_2021 for the current data!
# Load Packages =========================================================================================
library(tidyverse)
library(here)
# Load data =========================================================================================
upper_year = 2008 # for filtering datasets
# Escapement - Weir estimates by project
escapement <- read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987)
inriver <- read_csv("data/Processed_Data/OLD/inriver.csv") %>%
filter(year < upper_year & year >1987) %>%
mutate(Reconstruction=replace_na(Reconstruction, 0))
# This is proportions in each area/week/year - Pyj - right now, just fit for 2008
prop<- read_csv("data/Processed_Data/OLD/OLD_Proportions_run_present_weekly.csv") %>% # only select some weeks for now because proportion has less weeks than the effort data...
mutate(year = 1976:(1976+nrow(.)-1)) %>%
filter(year < upper_year & year >1987) %>%
dplyr::select(-year) %>%
dplyr::select(c(3:14)) #getting rid of first two weeks bc that is what bue does ....
# Calculate Pyj based on Bethel CPUE
# Load bethel CPUE and calculate here
#
# prop<-read_csv("data/Processed_Data/Prop_V2.csv") %>%
#   filter(year < 2008 & year >1987) %>%
#   dplyr::select(-year)
#  observed catch per week
obs_catch_week <- read_csv("data/Processed_Data/OLD/OLD_catch_week.csv") %>%
filter(year < upper_year & year >1987) %>%
dplyr::select(-year) %>%
select(c(1:12))
# Observed effort
effort <- read_csv("data/Processed_Data/OLD/OLD_effort.csv") %>% # from bethel csv
filter(year < upper_year & year >1987) %>%
dplyr::select(c(1:12))
#obs Commercial subsitence catch
catch<-read_csv("data/Processed_Data/OLD/OLD_catch.csv") %>% # from bethel csv
filter(Year < upper_year & Year >1987)
# format effort for equation
B_yj = as.matrix(effort[,1:12])
#years <- c(1976:1976+nrow(obs_catch_week)-1)  #1976:2021 #length of years in dataset
Nyear <- as.numeric(nrow(prop))
T =  Nyear*4 # "Total number of observations from all data sets" page 6 -here: number of years * 4 data sets. is this right?
weeks = as.numeric(ncol(prop))
projects = ncol(escapement)-1 # number of weir projects - the year column
#err_variance = 0 # error for catch equation...
# Set up data that are inputs to likelihood fxns =========================================================================================
obs_escape_project <- as.matrix(escapement[,2:8])
obs_escape <- as.matrix(rowSums(escapement[,2:8]))
#obs_catch <- as.matrix(rowSums(catch[,2:3]))
obs_commercial <- as.matrix(catch[,2])
obs_subsistence <- as.matrix(catch[,3])
obs_N = as.matrix(obs_escape + obs_subsistence + obs_commercial)# + inriver[2] ) # +catch[,4] + catch[,5]) # on Page 5 of model paper this is N_y, in excel this is "# of fish accounted for"
#obs_catch <- as.matrix(obs_subsistence + obs_commercial)
# NLL Function =========================================================================================
NLL <- function(par,
data,
weeks,
projects,
Nyear,
weights,
T){
# Extract parameters and data: ============================================================================
# grep("ln_q_vec", par_names)
ln_q_vec <- par[1]
#  grep("pred_N", par_names)
# ln_pred_N <- par[2:25]
ln_pred_N <- par[2:21]
# ln_pred_N <- par[2:37]
# grep("ln_pred_slope", par_names)
# ln_pred_slope <- par[38:44]
ln_pred_slope <- par[22:28]
# ln_pred_slope <- par[26:32]
q_vec <- exp(ln_q_vec)
pred_N <- exp(ln_pred_N)
pred_slope <- exp(ln_pred_slope)
# Extract Data: ============================================================================
B_yj=as.matrix(data$B_yj)
#obs_catch =as.matrix(data$obs_catch)
obs_catch_week=as.matrix(data$obs_catch_week)
obs_N=as.matrix(data$obs_N)
obs_escape_project = as.matrix(data$obs_escape_project)
obs_subsistence = as.matrix(data$obs_subsistence)
obs_commercial = as.matrix(data$obs_commercial)
# Predict N - Observed Total Return =========================================================================================
# N_yi = number of chum present in commercial district by week/year (Eq 4)
#summing across weeks for Nyi is supposed to give Ny, total fish present across years
N_yi <- matrix(nrow = Nyear, ncol = weeks)
for (j in 1:Nyear) {
N_yi[j,] =  as.matrix(pred_N[j]*prop[j,])
}
# Predict C - Catch, using Baranov catch equation: ============================================================================
# N is # of fish (week by year)
# B is effort (week by year)
# for right now estimate 1 q for whole data set
#pred_catch = N_yi_vec_prop*(1-(exp(-q_vec*B_yj_vec)))
pred_catch <- matrix(ncol = weeks, nrow = Nyear)
for (i in 1:weeks) {
for (j in 1:Nyear) {
pred_catch[j,i] = N_yi[j,i]*(1-(exp(-q_vec*B_yj[j,i])))
}
}
# pred_catch_col <- rowSums(pred_catch)
# Predict E - Escapement =========================================================================================
#Eq 1 expands the data and yield "observed escapement"
# this is equation 1 (trying to code it exactly as it is even though it seems super weird...)
obs_e_week <-matrix(NA, ncol = projects, nrow = Nyear)
for (p in 1:projects) {
for (j in 1:Nyear) {
obs_e_week[j,p] = pred_slope[p]*obs_escape_project[j,p]
}
}
obs_escape<- rowSums(obs_e_week)
#equation 6 in Bue paper
#obs_N = as.matrix(obs_escape + obs_subsistence + obs_commercial)# + inriver[2] ) # +catch[,4] + catch[,5]) # on Page 5 of model paper this is N_y, in excel this is "# of fish accounted for"
# equation 2 yields predicted escapement
pred_E = pred_N - obs_subsistence - obs_commercial
# Calculate NLLs ===================================================================
#need to loop these because  should skip 0s
NLL_catch  <- dnorm(x=log(obs_catch_week+1e-6), mean=log(pred_catch+1e-6),
sd = 0.1, log = TRUE)
#
#     for (i in 1:weeks) {
#     for (j in 1:Nyear) {
#       if(pred_catch[j,p]>0){
#   NLL_catch[j,i]  <- dnorm(x=log(obs_catch_week[j,i]+1e-6), mean=log(pred_catch[j,i]+1e-6),
#                       sd = 0.1, log = TRUE)
#       }
#     }
#   }
#
NLL_escapement  <- dnorm(x=log(obs_escape+1e-6), mean=log(pred_E+1e-6),
sd = 0.1, log = TRUE)
NLL_N_TotalRun_sum  <- dnorm(x=log(obs_N+1e-6), mean=log(pred_N+1e-6),
sd = 0.1, log = TRUE)
NLL <- (-1 * (weights[1] * sum(NLL_catch, na.rm = TRUE))* (weights[2] * sum(NLL_escapement, na.rm = TRUE))* (weights[3] * sum(NLL_N_TotalRun_sum, na.rm = TRUE))) * (273/2)
# Return the total objective function value
return(NLL)
}
# Parameter starting values ===================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") %>% # this is from the older excel sheet, columns Q,R,FW
filter(param == "N", year_or_project < upper_year) %>%
arrange(year_or_project)
bue_estimated_slope <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") %>% # this is from the older excel sheet, columns Q,R,FW
filter(param == "Slope" ) %>%
arrange(year_or_project)
ln_q_vec <- log(0.0000441)
#ln_pred_N <- rep(log(2000000),Nyear)
ln_pred_N <-log(bue_estimated$value)# rep(log(2000000),Nyear)
escapement_slope <-  log(bue_estimated_slope$value) #rep(log(350), times = projects)
pars_start<- c(
ln_q_vec,
ln_pred_N,
escapement_slope)
par_names <- c(
"ln_q_vec",
paste0("ln_pred_N", c(1:Nyear)),
paste0("ln_pred_slope", c(1:projects)))
# #in paper
w_catch <- 2.0
w_escapement <- 1.0
w_inriver <- 0.5
weights <- c(w_catch,w_escapement,w_inriver)
#in excel
# w_catch <- 1.0
# w_escapement <- 1.0
# w_inriver <- 1.0
# weights <- c(w_catch,w_escapement,w_inriver)
# List input data  ===================================================================
data <- list(B_yj=B_yj,
# obs_catch_week=obs_catch,
obs_catch_week=obs_catch_week,
inriver =inriver,
obs_N=obs_N,
obs_escape_project=obs_escape_project,
obs_commercial = obs_commercial,
obs_subsistence=obs_subsistence)
#check that NLL fxn works on its own, it does
NLL(par=pars_start,
data =data,
weeks=weeks,
projects=projects,
Nyear=Nyear,
weights = weights,
T=T)
# Optimize ============================================================================================================
fit_nlm <- nlminb(
start = pars_start,
objective = NLL,
data =data,
weeks=weeks,
projects=projects,
Nyear=Nyear,
weights = weights,
T=T,
control = list(iter.max = 1e6, eval.max = 1e6, trace = 1)
)
# Access the estimated parameter values
param_est <- fit_nlm$par
exp(param_est)
fit_nlm$objective
saveRDS(exp(param_est),"output/OLD_optim_output_par.RDS")
# Start ==================================================================================================
# Project Name: AYK Chum Salmon Model
# Creator: Genoa Sullaway
# Date: Start June 2023
#
# Purpose: Compare estimated params from Bue excerl model to my R model
# Currently organized for the 1988-2007 version.
# Load Packages =========================================================================================
library(tidyverse)
library(here)
# Load data =========================================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") # this is from the older excel sheet, columns Q,R,FW
estimated_parameters<- readRDS("output/OLD_optim_output_par.RDS")
# Load data (below just for plotting) =========================================================================================
escapement <- read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < 2008 & year >1987)
proj_names<-colnames(escapement)[2:8]
# Plot N =========================================================================================
pred_N<-data.frame(Year = c(1988:2007),
pred_N_est= as.vector(c(estimated_parameters[2:21])))
est_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < 2008) %>%
left_join(pred_N) %>%
gather(2:3, key = "id", value = "value")
N_plot<-ggplot(data = est_N,aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
# plot observed vs my predictions
escapement_sum <-  read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987) %>%
gather(2:8, key = "project", value = "value")  %>%
group_by(year) %>%
dplyr::summarise(value = sum(value)) %>%
rename(Year = "year") %>%
dplyr::mutate(id = "obs_E_sum") %>%
rbind(est_N) %>%
filter(id %in% c("obs_E_sum", "pred_N_est"))
N_plot_observed<-ggplot(data = escapement_sum,aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot_observed
# Plot Slope =========================================================================================
pred_slope<-data.frame(project = c(proj_names),
pred_slope= as.vector(c(estimated_parameters[22:28])))
est_slope<- bue_estimated %>%
filter(param == "Slope") %>%
dplyr::mutate(project = word(year_or_project, 1),
Bue_slope = value) %>%
dplyr::select(c(4:5)) %>%
left_join(pred_slope) %>%
gather(2:3, key = "id", value = "value") #%>%
# mutate(value = case_when(id == "pred_slope" ~ value*4.5,
#                          TRUE ~ value))
### Plot predicted slope
slope_plot <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
labs(caption = "Pred Slope is from GS reconstruction model") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
### Plot predicted slope
slope_plot2 <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
facet_wrap(~id)
# Plot Q =========================================================================================
pred_Q<-data.frame(pred_Q= as.vector(c(estimated_parameters[1])))
est_Q<- bue_estimated %>%
filter(param == "Q") %>%
dplyr::mutate(Bue_Q = value) %>%
dplyr::select(c(4)) %>%
cbind(pred_Q) %>%
gather(1:2, key = "id", value = "value")
### Plot predicted slope
q_plot<-ggplot(data = est_Q,aes(x=id, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Q")
slope_plot
slope_plot2
q_plot
N_plot
pdf("output/Kusko_RR_Plots.pdf")
slope_plot
q_plot
N_plot
dev.off()
slope_plot
q_plot
