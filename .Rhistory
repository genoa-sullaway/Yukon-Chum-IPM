B_yj=as.matrix(data$B_yj)
#obs_catch =as.matrix(data$obs_catch)
obs_catch_week=as.matrix(data$obs_catch_week)[,2:7]
obs_catch_week[is.na(obs_catch_week)] <- 0
obs_N=as.matrix(data$obs_N)
obs_escape_project = as.matrix(data$obs_escape_project)
obs_subsistence = as.matrix(data$obs_subsistence)
obs_commercial = as.matrix(data$obs_commercial)
# Predict N - Observed Total Return =========================================================================================
# N_yi = number of chum present in commercial district by week/year (Eq 4)
# summing across weeks for Nyi is supposed to give Ny, total fish present across years
N_yi <- matrix(nrow = Nyear, ncol = weeks)
for (j in 1:Nyear) {
for (i in 1:weeks) {
if(prop[j,i] > 0 & obs_catch_week[j,i]>0){
N_yi[j,i] =  as.matrix(pred_N[j]*prop[j,i])
} else(N_yi[j,i] <- NA)
}
}
# Predict C - Catch, using Baranov catch equation: ============================================================================
# N is # of fish (week by year)
# B is effort (week by year)
# for right now estimate 1 q for whole data set
# pred_catch = N_yi_vec_prop*(1-(exp(-q_vec*B_yj_vec)))
pred_catch <- matrix(ncol = weeks, nrow = Nyear)
for (i in 1:weeks) {
for (j in 1:Nyear) {
if(is.na(N_yi[j,i])){
pred_catch[j,i] <- NA
}
else( pred_catch[j,i] = N_yi[j,i]*(1-(exp(-q_vec*B_yj[j,i]))))
}
}
# pred_catch_col <- rowSums(pred_catch)
# Predict E - Escapement =========================================================================================
#Eq 1 expands the data and yield "observed escapement"
# this is equation 1 (trying to code it exactly as it is even though it seems super weird...)
obs_e_proj <-matrix(NA, ncol = projects, nrow = Nyear)
# fix week --> project title
for (p in 1:projects) {
for (j in 1:Nyear) {
obs_e_proj[j,p] = pred_slope[p]*obs_escape_project[j,p]
}
}
obs_escape<- rowSums(obs_e_proj)
#equation 6 in Bue paper
#obs_N = as.matrix(obs_escape + obs_subsistence + obs_commercial)# + inriver[2] ) # +catch[,4] + catch[,5]) # on Page 5 of model paper this is N_y, in excel this is "# of fish accounted for"
# equation 2 yields predicted escapement
pred_E = pred_N - obs_subsistence - obs_commercial #+ inriver[2]
# Calculate NLLs ===================================================================
SSQ_catch <- matrix(NA, ncol = weeks, nrow = Nyear)
for (i in 1:weeks) {
for (j in 1:Nyear) {
if(pred_catch[j,i]>0 & !any(is.na(pred_catch[j,i]))){
SSQ_catch[j,i] <- sum((log(obs_catch_week[j,i])-log(pred_catch[j,i]))^2/(weights[1]^2))
}
}
}
SSQ_catch_sum  <- sum(SSQ_catch, na.rm = TRUE)
# NLL_catch  <- dnorm(x=log(obs_catch_week+1e-6), mean=log(pred_catch+1e-6),
#                               sd = 0.1, log = TRUE)
#     for (i in 1:weeks) {
#     for (j in 1:Nyear) {
#       if(pred_catch[j,p]>0){
#   NLL_catch[j,i]  <- dnorm(x=log(obs_catch_week[j,i]+1e-6), mean=log(pred_catch[j,i]+1e-6),
#                       sd = 0.1, log = TRUE)
#       }
#     }
#   }
SSQ_escapement <- matrix(NA, ncol = projects, nrow = Nyear)
for (p in 1:projects) {
for (j in 1:Nyear) {
if(obs_e_proj[j,p]>0){
SSQ_escapement[j,p] <- (log(obs_e_proj[j,p])-log(pred_E[j]))^2/(weights[2]^2)
} else{
SSQ_escapement[j,p] <- 0}
}
}
SSQ_escapement_sum<-sum(SSQ_escapement)
# excel only does SSQ for certain years... code that below: 2000,2003,2004,2006
# grep("2000", escapement$year)
#  grep("2002", escapement$year)
# grep("2003", escapement$year)
#   grep("2006", escapement$year)
# OG
# SSQ_TotalRun <- matrix(ncol = 1, nrow = Nyear)
#
# for (i in 1:Nyear) {
#   if(i %in% c(13,15,16,19))  {
#     SSQ_TotalRun[i]  <-  (log(obs_N[i]+1e-6)-log(pred_N[i]+1e-6))^2/(weights[3]^2)
#   } else{
#     SSQ_TotalRun[i] <- 0 }
# }
# SSQ_TotalRun_sum<-sum(SSQ_TotalRun)
SSQ_TotalRun <- matrix(ncol = 1, nrow = Nyear)
for (i in 1:Nyear) {
if(i %in% c(13,15,16,19))  {
SSQ_TotalRun[i]  <-  (log(obs_inriver[i]+1e-6)-log(pred_N[i]+1e-6))^2/(weights[3]^2)
} else{
SSQ_TotalRun[i] <- 0 }
}
SSQ_TotalRun_sum<- sum( SSQ_TotalRun)
#  SSQ_TotalRun_sum  <- sum(ifelse(!is.na(pred_N), (log(obs_N+1e-6)-log(pred_N+1e-6))^2/(weights[3]^2),0))
# NLL_escapement  <- dnorm(x=log(obs_escape+1e-6), mean=log(pred_E+1e-6),
#                     sd = 0.1, log = TRUE)
# NLL_N_TotalRun_sum  <- dnorm(x=log(obs_N+1e-6), mean=log(pred_N+1e-6),
#                          sd = 0.1, log = TRUE)
#
#NLL <- (-1 * (weights[1] * sum(NLL_catch, na.rm = TRUE))* (weights[2] * sum(NLL_escapement, na.rm = TRUE))* (weights[3] * sum(NLL_N_TotalRun_sum, na.rm = TRUE))) * (273/2)
NLL <- log(SSQ_escapement_sum+SSQ_TotalRun_sum+SSQ_catch_sum)*T/2
# Return the total objective function value
return(NLL)
}
# Parameter starting values ===================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") %>% # this is from the older excel sheet, columns Q,R,FW
filter(param == "N" ) %>%
arrange(year_or_project)
bue_estimated_slope <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") %>% # this is from the older excel sheet, columns Q,R,FW
filter(param == "Slope" ) %>%
arrange(year_or_project)
ln_q_vec <- log(0.0000441)
ln_pred_N <- rep(log(2000000),times = Nyear) # log(bue_estimated$value)
escapement_slope <- rep(log(150), times = projects) # log(bue_estimated_slope$value) #
pars_start<- c(
ln_q_vec,
ln_pred_N,
escapement_slope)
par_names <- c(
"ln_q_vec",
paste0("ln_pred_N", c(1:Nyear)),
paste0("ln_pred_slope", c(1:projects)))
# #in paper
# w_catch <- 2.0
# w_escapement <- 1.0
# w_inriver <- 0.5
# weights <- c(w_catch,w_escapement,w_inriver)
#in excel
w_catch <- 1.0
w_escapement <- 1.0
w_inriver <- 0.25
weights <- c(w_catch,w_escapement,w_inriver)
# List input data  ===================================================================
data <- list(B_yj=B_yj,
# obs_catch_week=obs_catch,
obs_catch_week=obs_catch_week,
inriver =inriver,
obs_N=obs_N,
obs_escape_project=obs_escape_project,
obs_commercial = obs_commercial,
obs_subsistence=obs_subsistence)
#check that NLL fxn works on its own, it does
NLL(par=pars_start,
data =data,
weeks=weeks,
projects=projects,
Nyear=Nyear,
weights = weights,
T=T)
# Optimize ============================================================================================================
fit_nlm <- nlminb(
start = pars_start,
objective = NLL,
data =data,
weeks=weeks,
projects=projects,
Nyear=Nyear,
weights = weights,
T=T,
control = list(iter.max = 1e6, eval.max = 1e6, trace = 1)
)
# Access the estimated parameter values
param_est <- fit_nlm$par
exp(param_est)
fit_nlm$objective
saveRDS(exp(param_est),"output/optim_output_par_data2021.RDS")
# Load data =========================================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") # this is from the older excel sheet, columns Q,R,FW
#SSQ
estimated_parameters<- readRDS("output/optim_output_par_data2021.RDS")
upper_year = 2022
# Load data (below just for plotting) =========================================================================================
escapement <- read_csv("data/Processed_Data/kusko_escapement.csv")  %>%
filter(!year < 1988)
proj_names<-colnames(escapement)[2:8]
# Plot N =========================================================================================
pred_N<-data.frame(Year = c(1988:(upper_year-1)),
pred_N_est= as.vector(c(estimated_parameters[2:25])))
# Plot N =========================================================================================
pred_N<-data.frame(Year = c(1988:(upper_year-1)),
pred_N_est= as.vector(c(estimated_parameters[2:35])))
est_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < upper_year) %>%
left_join(pred_N) %>%
gather(2:3, key = "id", value = "value")
N_plot<-ggplot(data = est_N, aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
est_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < upper_year)
bueest_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < upper_year)
est_N <- pred_N %>%
left_join(bueest_N)
View(est_N)
est_N <- pred_N %>%
left_join(bueest_N) %>%
gather(2:3, key = "id", value = "value")
N_plot<-ggplot(data = est_N, aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
# plot observed vs my predictions
escapement_sum <-  read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987) %>%
gather(2:8, key = "project", value = "value")  %>%
group_by(year) %>%
dplyr::summarise(value = sum(value)) %>%
rename(Year = "year") %>%
dplyr::mutate(id = "obs_E_sum") %>%
rbind(est_N) %>%
filter(id %in% c("obs_E_sum", "pred_N_est"))
N_plot_observed<-ggplot(data = escapement_sum,aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot_observed
# Plot Slope =========================================================================================
pred_slope<-data.frame(project = c(proj_names),
pred_slope= as.vector(c(estimated_parameters[26:32])))
# Plot Slope =========================================================================================
pred_slope<-data.frame(project = c(proj_names),
pred_slope= as.vector(c(estimated_parameters[36:44])))
proj_names
# Load data (below just for plotting) =========================================================================================
escapement <- read_csv("data/Processed_Data/kusko_escapement.csv")  %>%
filter(!year < 1988)
proj_names<-colnames(escapement)[2:8]
proj_names
proj_names<-colnames(escapement)
proj_names
proj_names<-colnames(escapement)[1:9]
# Plot Slope =========================================================================================
pred_slope<-data.frame(project = c(proj_names),
pred_slope= as.vector(c(estimated_parameters[36:44])))
estbue_slope<- bue_estimated %>%
filter(param == "Slope") %>%
dplyr::mutate(project = word(year_or_project, 1),
Bue_slope = value) %>%
dplyr::select(c(4:5))
pred_slop <- pred_slop %>%
left_join(estbue_slope)
pred_slop <- pred_slope %>%
left_join(estbue_slope)
est_slope <- pred_slope %>%
left_join(estbue_slope)
View(est_slope)
View(estbue_slope)
estbue_slope<- bue_estimated %>%
filter(param == "Slope") %>%
dplyr::mutate(project = word(year_or_project, 1),
Bue_slope = value) %>%
dplyr::select(c(4:5))  %>%
mutate(project = case_when(project == "Aniak" ~ "Sonar",
project == "Tatlawiksuk" ~ "Tatlawitsak",
TRUE ~ "project"))
est_slope <- pred_slope %>%
left_join(estbue_slope) %>%
gather(2:3, key = "id", value = "value") #%>%
est_slope <- pred_slope %>%
left_join(estbue_slope)
estbue_slope<- bue_estimated %>%
filter(param == "Slope") %>%
dplyr::mutate(project = word(year_or_project, 1),
Bue_slope = value) %>%
dplyr::select(c(4:5))  %>%
mutate(project = case_when(project == "Aniak" ~ "Sonar",
project == "Tatlawiksuk" ~ "Tatlawitsak",
TRUE ~ project))
est_slope <- pred_slope %>%
left_join(estbue_slope)
est_slope <- pred_slope %>%
left_join(estbue_slope) %>%
gather(2:3, key = "id", value = "value") #%>%
### Plot predicted slope
slope_plot <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
labs(caption = "Pred Slope is from GS reconstruction model") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
slope_plot
### Plot predicted slope
slope_plot2 <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
facet_wrap(~id)
# Plot Q =========================================================================================
pred_Q<-data.frame(pred_Q= as.vector(c(estimated_parameters[1])))
est_Q<- bue_estimated %>%
filter(param == "Q") %>%
dplyr::mutate(Bue_Q = value) %>%
dplyr::select(c(4)) %>%
cbind(pred_Q) %>%
gather(1:2, key = "id", value = "value")
### Plot predicted slope
q_plot<-ggplot(data = est_Q,aes(x=id, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Q")
q_plot
N_plot
# Start ==================================================================================================
# Project Name: AYK Chum Salmon Model
# Creator: Genoa Sullaway
# Date: Start June 2023
#
# Purpose: Compare estimated params from Bue excerl model to my R model
# Currently organized for the 1988-2007 version.
# Load Packages =========================================================================================
library(tidyverse)
library(here)
upper_year = 2012 # for filtering datasets
# Load data =========================================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") # this is from the older excel sheet, columns Q,R,FW
#SSQ
estimated_parameters<- readRDS("output/OLD_optim_output_par.RDS")
# estimated with dnorm
#estimated_parameters<- readRDS("output/OLD_optim_output_pardnorm.RDS")
# Load data (below just for plotting) =========================================================================================
escapement <- read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987)
proj_names<-colnames(escapement)[2:8]
# Plot N =========================================================================================
pred_N<-data.frame(Year = c(1988:(upper_year-1)),
pred_N_est= as.vector(c(estimated_parameters[2:25])))
est_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < upper_year) %>%
left_join(pred_N) %>%
gather(2:3, key = "id", value = "value")
N_plot<-ggplot(data = est_N, aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
# plot observed vs my predictions
escapement_sum <-  read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987) %>%
gather(2:8, key = "project", value = "value")  %>%
group_by(year) %>%
dplyr::summarise(value = sum(value)) %>%
rename(Year = "year") %>%
dplyr::mutate(id = "obs_E_sum") %>%
rbind(est_N) %>%
filter(id %in% c("obs_E_sum", "pred_N_est"))
N_plot_observed<-ggplot(data = escapement_sum,aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot_observed
# Plot Slope =========================================================================================
pred_slope<-data.frame(project = c(proj_names),
pred_slope= as.vector(c(estimated_parameters[26:32])))
est_slope<- bue_estimated %>%
filter(param == "Slope") %>%
dplyr::mutate(project = word(year_or_project, 1),
Bue_slope = value) %>%
dplyr::select(c(4:5)) %>%
left_join(pred_slope) %>%
gather(2:3, key = "id", value = "value") #%>%
# mutate(value = case_when(id == "pred_slope" ~ value*4.5,
#                          TRUE ~ value))
### Plot predicted slope
slope_plot <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
labs(caption = "Pred Slope is from GS reconstruction model") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
### Plot predicted slope
slope_plot2 <- ggplot(data = est_slope,aes(x=project, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Slope")  +
facet_wrap(~id)
# Plot Q =========================================================================================
pred_Q<-data.frame(pred_Q= as.vector(c(estimated_parameters[1])))
est_Q<- bue_estimated %>%
filter(param == "Q") %>%
dplyr::mutate(Bue_Q = value) %>%
dplyr::select(c(4)) %>%
cbind(pred_Q) %>%
gather(1:2, key = "id", value = "value")
### Plot predicted slope
q_plot<-ggplot(data = est_Q,aes(x=id, y = value, group = id, fill = id)) +
geom_bar(stat="identity", position = "dodge") +
theme_classic() +
ylab("Q")
slope_plot
slope_plot2
q_plot
N_plot
pdf("output/Kusko_RR_Plots.pdf")
slope_plot
q_plot
N_plot
dev.off()
N_plot<-ggplot(data = est_N, aes(x=Year %>% filter(!Year == "2011"), y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
N_plot<-ggplot(data = est_N, aes(x=Year %>% filter(!Year == 2011), y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
# Start ==================================================================================================
# Project Name: AYK Chum Salmon Model
# Creator: Genoa Sullaway
# Date: Start June 2023
#
# Purpose: Compare estimated params from Bue excerl model to my R model
# Currently organized for the 1988-2007 version.
# Load Packages =========================================================================================
library(tidyverse)
library(here)
upper_year = 2012 # for filtering datasets
# Load data =========================================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") # this is from the older excel sheet, columns Q,R,FW
#SSQ
estimated_parameters<- readRDS("output/OLD_optim_output_par.RDS")
# estimated with dnorm
#estimated_parameters<- readRDS("output/OLD_optim_output_pardnorm.RDS")
# Load data (below just for plotting) =========================================================================================
escapement <- read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987)
proj_names<-colnames(escapement)[2:8]
# Plot N =========================================================================================
pred_N<-data.frame(Year = c(1988:(upper_year-1)),
pred_N_est= as.vector(c(estimated_parameters[2:25])))
est_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < upper_year) %>%
left_join(pred_N) %>%
gather(2:3, key = "id", value = "value")
N_plot<-ggplot(data = est_N, aes(x=Year %>% filter(!Year == 2011), y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
library(tidyverse)
library(here)
upper_year = 2012 # for filtering datasets
# Load data =========================================================================================
bue_estimated <- read_csv("data/Processed_Data/OLD/Estimated_N_OldModel_XLS.csv") # this is from the older excel sheet, columns Q,R,FW
#SSQ
estimated_parameters<- readRDS("output/OLD_optim_output_par.RDS")
# estimated with dnorm
#estimated_parameters<- readRDS("output/OLD_optim_output_pardnorm.RDS")
# Load data (below just for plotting) =========================================================================================
escapement <- read_csv("data/Processed_Data/OLD/OLD_kusko_escapement.csv") %>%
filter(year < upper_year & year >1987)
proj_names<-colnames(escapement)[2:8]
# Plot N =========================================================================================
pred_N<-data.frame(Year = c(1988:(upper_year-1)),
pred_N_est= as.vector(c(estimated_parameters[2:25])))
View(pred_N)
est_N<- bue_estimated %>%
filter(param == "N") %>%
dplyr::mutate(Year = as.numeric(year_or_project),
Bue_Estimate_Thousands = value ) %>%
dplyr::select(c(4:5)) %>%
filter(Year < upper_year) %>%
left_join(pred_N) %>%
gather(2:3, key = "id", value = "value")
N_plot<-ggplot(data = est_N %>% filter(!Year == 2011), aes(x=Year, y = value/1000, group = id, color = id)) +
geom_line( ) +
geom_point() +
theme_classic() +
ylab("Total Run (thousands of fish")
N_plot
