bounds_can <- extent(-156,-110,52,70)
#bounds_ak <- extent(-164.5,-160, 55,60)
extent_can <- st_set_crs(st_as_sf(as(bounds_can, "SpatialPolygons")), 4326)
can <- st_intersection(can, extent_can) #trim map by intersections
#mapping plotting/packages
library(maps)
library(raster)
library(sf)
library(ggpubr) # for ggarrange
library(viridis)
can <- sf::st_as_sf(maps::map('world','Canada',
plot=FALSE, fill=TRUE))
#create bounds to trim CAN map
bounds_can <- extent(-156,-110,52,70)
#bounds_ak <- extent(-164.5,-160, 55,60)
extent_can <- st_set_crs(st_as_sf(as(bounds_can, "SpatialPolygons")), 4326)
can <- st_intersection(can, extent_can) #trim map by intersections
#set up maps
ak <- sf::st_as_sf(maps::map('world','USA:Alaska',
plot=FALSE, fill=TRUE))
#create bounds to trim AK map
bounds_ak <- extent(-175,-130,52,70)
#bounds_ak <- extent(-164.5,-160, 55,60)
extent_ak <- st_set_crs(st_as_sf(as(bounds_ak, "SpatialPolygons")), 4326)
ak <- st_intersection(ak, extent_ak) #trim map by intersections
p <-
ggplot() +
# geom_sf(data = nariv, aes(
#   color = factor(ORD_FLOW), size = width, alpha = width
# )) +
geom_sf(data = can,fill = NA) +
geom_sf(data = ak, fill = NA) +
geom_sf(data = ariv, aes(
color = factor(ORD_FLOW), size = width, alpha = width
)) +
geom_sf(data = can,fill = NA) +
geom_sf(data = ak, fill = NA) +
coord_sf(
crs = prj,
xlim = c(bb["xmin"], bb["xmax"]),
ylim = c(bb["ymin"], bb["ymax"])
) +
labs(
y = "", subtitle = "",
x = "",
#title = "Rivers of North and Central America",
#caption = "©2022 Milos Popovic https://milospopovic.net Source: ©World Wildlife Fund, Inc. (2006-2013) HydroSHEDS database http://www.hydrosheds.org"
) +
scale_color_manual(
name = "",
values = c(
"#08306b", "#1c4680", "#305d94", "#4574a7",
"#5d8cb9", "#77a4cb", "#deebf7", "#deebf7", "#deebf7"
),
drop = F
) +
scale_alpha(range = c(0, 1)) +
scale_size(range = c(0, .45)) +
theme_minimal() +
theme(
text = element_text(family = "Montserrat"),
panel.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(
size = 100, color = "#2171b5", hjust = 0.5, vjust = -22
),
plot.subtitle = element_text(
size = 14, color = "#ac63a0", hjust = 0.5, vjust = 0
),
plot.caption = element_text(
size = 40, color = "grey60", hjust = 0.5, vjust = 120
),
axis.title.x = element_text(
size = 10, color = "grey20", hjust = 0.5, vjust = -6
),
legend.text = element_text(size = 9, color = "grey20"),
legend.title = element_text(size = 10, color = "grey20"),
strip.text = element_text(size = 12),
plot.margin = unit(c(t = -2.5, r = -10, b = -10, l = -10), "lines"),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggsave(
filename = "nca_rivers.png",
width = 9, height = 6, dpi = 600,
bg = "white", device = "png", p
)
p
bbox <- st_sfc(
st_polygon(list(cbind(
c(-178.2, 6.6, 6.6, -178.2, -178.2),
c(-52, -52, 83.3, 70, -52)
))),
crs = crsLONGLAT
)
prj <- "+proj=laea +lon_0=-100 +lat_0=50 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
new_prj <- sf::st_transform(bbox, crs = prj)
bb <- sf::st_bbox(new_prj)
p <-
ggplot() +
geom_sf(data = can,fill = NA) +
geom_sf(data = ak, fill = NA) +
geom_sf(data = ariv, aes(
color = factor(ORD_FLOW), size = width, alpha = width
)) +
coord_sf(
crs = prj,
xlim = c(bb["xmin"], bb["xmax"]),
ylim = c(bb["ymin"], bb["ymax"])
) +
labs(
y = "", subtitle = "",
x = "",
#title = "Rivers of North and Central America",
#caption = "©2022 Milos Popovic https://milospopovic.net Source: ©World Wildlife Fund, Inc. (2006-2013) HydroSHEDS database http://www.hydrosheds.org"
) +
scale_color_manual(
name = "",
values = c(
"#08306b", "#1c4680", "#305d94", "#4574a7",
"#5d8cb9", "#77a4cb", "#deebf7", "#deebf7", "#deebf7"
),
drop = F
) +
scale_alpha(range = c(0, 1)) +
scale_size(range = c(0, .45)) +
theme_minimal() +
theme(
text = element_text(family = "Montserrat"),
panel.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(
size = 100, color = "#2171b5", hjust = 0.5, vjust = -22
),
plot.subtitle = element_text(
size = 14, color = "#ac63a0", hjust = 0.5, vjust = 0
),
plot.caption = element_text(
size = 40, color = "grey60", hjust = 0.5, vjust = 120
),
axis.title.x = element_text(
size = 10, color = "grey20", hjust = 0.5, vjust = -6
),
legend.text = element_text(size = 9, color = "grey20"),
legend.title = element_text(size = 10, color = "grey20"),
strip.text = element_text(size = 12),
plot.margin = unit(c(t = -2.5, r = -10, b = -10, l = -10), "lines"),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
p
bbox <- st_sfc(
st_polygon(list(cbind(
c(-175, -110, -110, -175, -175),
c(-52, -52, 83.3, 70, -52)
))),
crs = crsLONGLAT
)
bbox
bbox <- st_sfc(
st_polygon(list(cbind(
c(-175, -110, -110, -175, -175),
c(-52, -52, 83.3, 70, -52)
))),
crs = crsLONGLAT
)
prj <- "+proj=laea +lon_0=-100 +lat_0=50 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
new_prj <- sf::st_transform(bbox, crs = prj)
bb <- sf::st_bbox(new_prj)
p <-
ggplot() +
geom_sf(data = can,fill = NA) +
geom_sf(data = ak, fill = NA) +
geom_sf(data = ariv, aes(
color = factor(ORD_FLOW), size = width, alpha = width
)) +
coord_sf(
crs = prj,
xlim = c(bb["xmin"], bb["xmax"]),
ylim = c(bb["ymin"], bb["ymax"])
) +
labs(
y = "", subtitle = "",
x = "",
#title = "Rivers of North and Central America",
#caption = "©2022 Milos Popovic https://milospopovic.net Source: ©World Wildlife Fund, Inc. (2006-2013) HydroSHEDS database http://www.hydrosheds.org"
) +
scale_color_manual(
name = "",
values = c(
"#08306b", "#1c4680", "#305d94", "#4574a7",
"#5d8cb9", "#77a4cb", "#deebf7", "#deebf7", "#deebf7"
),
drop = F
) +
scale_alpha(range = c(0, 1)) +
scale_size(range = c(0, .45)) +
theme_minimal() +
theme(
text = element_text(family = "Montserrat"),
panel.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
# plot.title = element_text(
#   size = 100, color = "#2171b5", hjust = 0.5, vjust = -22
# ),
# plot.subtitle = element_text(
#   size = 14, color = "#ac63a0", hjust = 0.5, vjust = 0
# ),
# plot.caption = element_text(
#   size = 40, color = "grey60", hjust = 0.5, vjust = 120
# ),
# axis.title.x = element_text(
#   size = 10, color = "grey20", hjust = 0.5, vjust = -6
# ),
# legend.text = element_text(size = 9, color = "grey20"),
# legend.title = element_text(size = 10, color = "grey20"),
# strip.text = element_text(size = 12),
# plot.margin = unit(c(t = -2.5, r = -10, b = -10, l = -10), "lines"),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
p
p <-
ggplot() +
geom_sf(data = can,fill = NA) +
geom_sf(data = ak, fill = NA) +
geom_sf(data = ariv, aes(
color = factor(ORD_FLOW), size = width, alpha = width
)) +
coord_sf(
crs = prj,
xlim = c(bb["xmin"], bb["xmax"]),
ylim = c(bb["ymin"], bb["ymax"])
) +
labs(
y = "", subtitle = "",
x = "" ) +
scale_color_manual(
name = "",
values = c(
"#08306b", "#1c4680", "#305d94", "#4574a7",
"#5d8cb9", "#77a4cb", "#deebf7", "#deebf7", "#deebf7"
),
drop = F
) +
scale_alpha(range = c(0, 1)) +
scale_size(range = c(0, .45)) +
theme_minimal() +
theme(
text = element_text(family = "Montserrat"),
panel.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
# plot.title = element_text(
#   size = 100, color = "#2171b5", hjust = 0.5, vjust = -22
# ),
# plot.subtitle = element_text(
#   size = 14, color = "#ac63a0", hjust = 0.5, vjust = 0
# ),
# plot.caption = element_text(
#   size = 40, color = "grey60", hjust = 0.5, vjust = 120
# ),
# axis.title.x = element_text(
#   size = 10, color = "grey20", hjust = 0.5, vjust = -6
# ),
# legend.text = element_text(size = 9, color = "grey20"),
# legend.title = element_text(size = 10, color = "grey20"),
# strip.text = element_text(size = 12),
# plot.margin = unit(c(t = -2.5, r = -10, b = -10, l = -10), "lines"),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
p
#need to do
na_outline <- rbind(ak,can)
plot(na_outline)
#First do a join that contains the points to filter points that are totally outside the region.
river_trim <- st_join(na_outline, ariv, join = st_contains) #you can change the join command to do nearest neighbor etc
View(river_trim)
p <-
ggplot() +
geom_sf(data = can,fill = NA) +
geom_sf(data = ak, fill = NA) +
geom_sf(data = ariv, aes(
color = factor(ORD_FLOW), size = width, alpha = width
)) +
coord_sf(
crs = prj,
xlim = c(bb["xmin"], bb["xmax"]),
ylim = c(bb["ymin"], bb["ymax"])
) +
labs(
y = "", subtitle = "",
x = "" ) +
scale_color_manual(
name = "",
values = c(
"#08306b", "#1c4680", "#305d94", "#4574a7",
"#5d8cb9", "#77a4cb", "#deebf7", "#deebf7", "#deebf7"
),
drop = F
) +
scale_alpha(range = c(0, 1)) +
scale_size(range = c(0, .45)) +
theme_minimal() +
theme(
text = element_text(family = "Montserrat"),
panel.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
# plot.title = element_text(
#   size = 100, color = "#2171b5", hjust = 0.5, vjust = -22
# ),
# plot.subtitle = element_text(
#   size = 14, color = "#ac63a0", hjust = 0.5, vjust = 0
# ),
# plot.caption = element_text(
#   size = 40, color = "grey60", hjust = 0.5, vjust = 120
# ),
# axis.title.x = element_text(
#   size = 10, color = "grey20", hjust = 0.5, vjust = -6
# ),
# legend.text = element_text(size = 9, color = "grey20"),
# legend.title = element_text(size = 10, color = "grey20"),
# strip.text = element_text(size = 12),
# plot.margin = unit(c(t = -2.5, r = -10, b = -10, l = -10), "lines"),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
p
p <-
ggplot() +
geom_sf(data = can,fill = NA) +
geom_sf(data = ak, fill = NA) +
geom_sf(data = river_trim, aes(
color = factor(ORD_FLOW), size = width, alpha = width
)) +
coord_sf(
crs = prj,
xlim = c(bb["xmin"], bb["xmax"]),
ylim = c(bb["ymin"], bb["ymax"])
) +
labs(
y = "", subtitle = "",
x = "" ) +
scale_color_manual(
name = "",
values = c(
"#08306b", "#1c4680", "#305d94", "#4574a7",
"#5d8cb9", "#77a4cb", "#deebf7", "#deebf7", "#deebf7"
),
drop = F
) +
scale_alpha(range = c(0, 1)) +
scale_size(range = c(0, .45)) +
theme_minimal() +
theme(
text = element_text(family = "Montserrat"),
panel.background = element_blank(),
legend.background = element_blank(),
legend.position = "none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
# plot.title = element_text(
#   size = 100, color = "#2171b5", hjust = 0.5, vjust = -22
# ),
# plot.subtitle = element_text(
#   size = 14, color = "#ac63a0", hjust = 0.5, vjust = 0
# ),
# plot.caption = element_text(
#   size = 40, color = "grey60", hjust = 0.5, vjust = 120
# ),
# axis.title.x = element_text(
#   size = 10, color = "grey20", hjust = 0.5, vjust = -6
# ),
# legend.text = element_text(size = 9, color = "grey20"),
# legend.title = element_text(size = 10, color = "grey20"),
# strip.text = element_text(size = 12),
# plot.margin = unit(c(t = -2.5, r = -10, b = -10, l = -10), "lines"),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
p
p
#copied from here: https://github.com/milos-agathon/map-rivers-with-sf-and-ggplot2-in-R/blob/main/R/rivers_america.r
# libraries we need
#load in project lat and longs
libs <- c(
"httr", "tidyverse", "sf", "here"
)
# install missing libraries
installed_libs <- libs %in% rownames(installed.packages())
if (any(installed_libs == F)) {
install.packages(libs[!installed_libs])
}
# load libraries
invisible(lapply(libs, library, character.only = T))
sysfonts::font_add_google("Montserrat", "Montserrat")
showtext::showtext_auto()
# 1. GET RIVERS DATA
#---------
project <- read.csv("data/project_lat_lon.csv")
ar_riv <- sf::st_read("HydroRIVERS_v10_ar_shp/HydroRIVERS_v10_ar_shp/HydroRIVERS_v10_ar.shp") %>%
st_cast("MULTILINESTRING")
#summary(ar_riv$ORD_FLOW)
ariv <- ar_riv %>%
mutate(
width = as.numeric(ORD_FLOW),
width = case_when(
width == 3 ~ 0.8,
width == 4 ~ 0.6,
width == 5 ~ 0.45,
width == 6 ~ 0.35,
width == 7 ~ 0.25,
width == 8 ~ 0.15,
width == 9 ~ 0.1,
width == 10 ~ 0.1,
TRUE ~ 0
)
) %>%
# filter(ORD_FLOW < 6) %>%
st_as_sf()
ariv$geometry <- ariv$geometry %>%
s2::s2_rebuild() %>%
sf::st_as_sfc()
plot(ariv)
# proportions in each area/week/year
prop<- read_csv("data/Processed_Data/Proportions_run_present_weekly.csv")
# Escapement - Weir estimates by project
escapement <- read_csv("data/Processed_Data/kusko_escapement.csv")
# Catch
catch<-read_csv("data/Processed_Data/catch.csv")
# Effort
effort <- read_csv("data/Processed_Data/effort.csv")
library(tidyverse)
library(here)
# Load data
# proportions in each area/week/year
prop<- read_csv("data/Processed_Data/Proportions_run_present_weekly.csv")
# Escapement - Weir estimates by project
escapement <- read_csv("data/Processed_Data/kusko_escapement.csv")
# Catch
catch<-read_csv("data/Processed_Data/catch.csv")
# Effort
effort <- read_csv("data/Processed_Data/effort.csv")
years <- 1976:2021
Nyear <- length(years)
projects = 7 # number of weir projects
T =  #Total number of observations ?? for liklihood fxn...
par.names <- c("ln_q",
paste0("ln_slope", c(1:projects)))
grep("q", par.names)
grep("slope", par.names)
# set up data that are inputs to likelihood fxns   ----------------------------
obs_escape <- rowSums(escapement[,2:8])
obs_catch = rowSums(catch[,2:3])
obs_commercial <- catch[,2]
obs_subsistence <- catch[,3]
obs_N = obs_escape + obs_subsistence + obs_catch # in excel this is "# of fish accounted for"
# this is a data input to the baranov catch equation prediction (?) though notes say it is Nhat ??
N_yi = as.matrix(obs_N*prop)
B_yj = effort[,1:13]
ncol(P_yj)
View(B_yj)
data(hare)
share <- sqrt(hare)
model3 <- arima(share,order=c(3,0,0))
postscript("~\\Stat 611\\Spring 17\\Lecture notes\\Chapter 9\\9_3.eps",width=6,height=2)
par(mar=c(4,4,0.2,0),cex=0.8)
plot(model3, n.ahead=25,type='b',xlab="Year",ylab="Sqrt(hare)")
abline(h=model3$coef[4])
dev.off()
data(hare)
share <- sqrt(hare)
model3 <- arima(share,order=c(3,0,0))
postscript("~\\Stat 611\\Spring 17\\Lecture notes\\Chapter 9\\9_3.eps",width=6,height=2)
par(mar=c(4,4,0.2,0),cex=0.8)
plot(model3, n.ahead=25,type='b',xlab="Year",ylab="Sqrt(hare)")
abline(h=model3$coef[4])
data(hare)
share <- sqrt(hare)
